<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://Big-Mouth.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2021 22:29:53 +0800</lastBuildDate>
    
        <atom:link href="https://Big-Mouth.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>牛牛的幂运算</title>
      <link>https://Big-Mouth.github.io/posts/%E7%89%9B%E7%89%9B%E7%9A%84%E5%B9%82%E8%BF%90%E7%AE%97/</link>
      <pubDate>Tue, 09 Mar 2021 22:29:53 +0800</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/%E7%89%9B%E7%89%9B%E7%9A%84%E5%B9%82%E8%BF%90%E7%AE%97/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;链接：&lt;a href=&#34;&#34;&gt;https://ac.nowcoder.com/acm/problem/21578&lt;/a&gt;
来源：牛客网&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;题目描述
牛牛在做一道数学题，他发现自己不怎么会做，请你帮帮他
求有多少a,b,c,d满足a [^b] = c [^ d]， 1&amp;lt;=a,b,c,d&amp;lt;=n, 模 109+7
输入描述:
输入一个整数n (1 ≤ n ≤ 109)
输出描述:
输出一个整数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;示例1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;
&lt;strong&gt;2&lt;/strong&gt;
&lt;strong&gt;输出&lt;/strong&gt;
&lt;strong&gt;6&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;示例2&lt;/strong&gt;
&lt;strong&gt;输入&lt;/strong&gt;
&lt;strong&gt;100&lt;/strong&gt;
&lt;strong&gt;输出&lt;/strong&gt;
&lt;strong&gt;21620&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;示例3&lt;/strong&gt;
&lt;strong&gt;输入&lt;/strong&gt;
&lt;strong&gt;22306&lt;/strong&gt;
&lt;strong&gt;输出&lt;/strong&gt;
&lt;strong&gt;68467&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;备注:
子任务一30分：n&amp;lt;=10000
子任务二30分：n&amp;lt;=1000000
子任务三40分：n&amp;lt;=1000000000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;思路：&lt;/p&gt;
&lt;p&gt;这道题对于刚学数论的我来说还是有点难的，所以我就请教了余伟豪，他也想了一上午，于是，在午休的时候，他过掉了这道题，然后跟我讲了他的解题思路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先，我们要清楚题目问我们的是方案的数目，给我们的限制是1&amp;lt;=a,b,c,d&amp;lt;=n，n&amp;lt;=1e9，这个范围较大，于是我们开始摸索：对于a [^b] = c [^ d]，我们先讨论两边的底数，很容易发现，a和c的所有因子必须相等，比如，如果a = 4, c = 6;则a的因子有1， 2；而c的因子有1,2,3，即a和b两数的因子不完全相同，因此，两边无论如何都不可能相等。既然这样，我们不妨假设：&lt;strong&gt;a = x[^i], b = x[^j]&lt;/strong&gt;,于是，题目就转化成了求满足条件i * a = j * b的等式的个数，我们先讨论一下i和j的取值范围，由于i,j分别为a和c转化为  **x[^i], x[^j]**之后的指数，而1&amp;lt;a,c &amp;lt;1e9，因此x&amp;gt;=1(当然这个我们等下单独计算)，因此，除掉1之后x&amp;gt;=2，则此时1&amp;lt;i,j&amp;lt;31,然后就是对于我们给定的n，1&amp;lt;  &lt;strong&gt;x[^i], x[^j]&lt;/strong&gt;&amp;lt;n，那么中间一定有min{$$ \sqrt[i]{n} $$ ,$$ \sqrt[j]{n} $$}个x，这就对应了x个结果，因为确定了底数之后，对于给定的n，结果一定就只有min{$$ \sqrt[i]{n} $$ ,$$ \sqrt[j]{n} $$}个，比如，假设i = 2, j = 3，n = 100，那么x &amp;lt;= 4（自己想一下为什么），想到这里这一切就结束了吗？然而并没有，不要忘记：当gcd(i,j) != 1时，会有多对不同的i,j对应一个相同的x,这就出现了重复的现象，因此，我们在循环遍历i,j的时候，先要判定i,j是否互质，互质的时候才计算，写到这里，计算出来的还不是最终答案。while(qpow(aa,i) &amp;lt;= a) aa++; aa&amp;ndash;;这个手动不精度就好了，因为不加精度会产生误差，所以应该是1/i产生的精度误差。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面给出AC代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;iostream&amp;gt;
#include&amp;lt;algorithm&amp;gt;
using namespace std;

typedef long long ll;
const ll mod = 1e9+7;
int main(){
    ll n; cin &amp;gt;&amp;gt; n;
    ll a, b, c, d;
    a = b = c = d = n;
    ll ans = n*n%mod;//当a=c=1时
    for(int i = 1; i &amp;lt;= 32; i++)
        for(int j = 1; j &amp;lt;= 32; j++)
            if(__gcd(i,j) == 1){
                ll x = pow(a, 1.0/i);
                ll y = pow(c, 1.0/j);
                while(pow(x, i) &amp;lt;= n) x++; x--;
                while(pow(y, j) &amp;lt;= n) y++; y--;
                ans = (ans + min(n/i, n/j)*min(x-1,y-1))%mod;
            }
    printf(&amp;quot;%lld&amp;quot;, ans);
}

&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;另外一种方法：
#include &amp;lt;iostream&amp;gt;
#include&amp;lt;algorithm&amp;gt;
using namespace std;
typedef long long ll;
const ll mod = 1e9 + 7;
int main()
{
    ios::sync_with_stdio(false); cin.tie(0);cout.tie(0);
    
    int n; cin &amp;gt;&amp;gt; n;
    ll ans = 0;
    ans = ((n%mod)*(n%mod))%mod;
    ans += ((n%mod)*((n-1)%mod))%mod;
    ll m = sqrt(n);
    for(ll a = 2; a &amp;lt;= m; a++){
        for(ll x = a*a, b = 2; x &amp;lt;= n; x *= a, b++){
            for(ll d = 1; d &amp;lt; b; d++){
                if(__gcd(d, b) == 1){
                    ans = (ans + ((n/b)*2)%mod)%mod;
                }
            }
        }
    }
    cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Bag_problem</title>
      <link>https://Big-Mouth.github.io/posts/bag_problem/</link>
      <pubDate>Tue, 09 Mar 2021 14:47:24 +0800</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/bag_problem/</guid>
      <description>&lt;h1 id=&#34;bag_problem&#34;&gt;Bag_problem&lt;/h1&gt;
&lt;p&gt;​	背包问题有很多种，因此，很有必要给他来一个分类。相信很多同学对背包问题都存在着不少误区，想要吃透它却又不知道重何下口，那么，今天，它来了！这篇文章，百分百干货，相信你看完之后，一定收获满满！&lt;/p&gt;
&lt;h3 id=&#34;首先登场的是01背包问题httpswwwacwingcomproblemcontentdescription2&#34;&gt;首先登场的是：&lt;strong&gt;&lt;a href=&#34;https://www.acwing.com/problem/content/description/2/&#34;&gt;01背包问题&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题意：有n件物品和一个容量为m的背包，第i件物品消耗的容量为vi，价值为wi，求解放入哪些物品可以使得背包中总价值最大。注意：&lt;strong&gt;每件物品只能选0次或者1次&lt;/strong&gt;，因此叫做01背包问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于这类问题，很显然就是用dp，那么就按照闫氏dp分析法，先画一个图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201014214519429.png&#34; alt=&#34;image-20201014214519429&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是，代码应该马上就能码出来了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1010&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; f[N];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; w[N], v[N];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;n, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;m);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;  i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
        scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;v[i], &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;w[i]);
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; v[i]; j&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;){&lt;span style=&#34;color:#75715e&#34;&gt;//这里要特别注意，由于v[i]&amp;gt;0，因此，j-v[i]&amp;lt;j,由于原来的二维等式为：f[i][j]=max(f[i-1][j],f[i-1][j-v[i]]+w[i]),如果我们从大到小开始算的话，那么我们在用f[j]的时候，f[j-1]一定没有算过，即我们得到的一定是f[i-1]的状态。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            f[j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(f[j], f[j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; v[i]] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; w[i]);
        }
    }
    printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, f[m]);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有小伙伴可能问，啊这里好像没有初始化呀，而且为啥是j要倒过来遍历呢？&lt;/p&gt;
&lt;p&gt;先看初始化问题：其实这里已经把所有的f[i]都初始化为零了，这样的话，我们最终得出的f[m]就是答案，即所有体积小于等于m的情况下，最大价值是多少。而不是体积恰好等于m的情况下，最大价值是多少。假设，我们只把f[0]初始化为0，而其他的初始化为负无穷大的话，那么我们就需要去枚举了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;证明：假设我们最终得到的最优的选法的总体积是k，而k&amp;lt;m的话，则f[k]就是最大价值，&lt;/p&gt;
&lt;p&gt;即f[k] = max_w，这里我们的f[k]不一定都是f[0]转移过来，因为这里所有的f[i]都初始化为了0。&lt;/p&gt;
&lt;p&gt;f[0] = 0 =&amp;gt; f[v[0]]= w[0] =&amp;gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;f[m-k] = 0 =&amp;gt; f[m-k + v[0]] = w[0] =&amp;gt; &amp;hellip;(m-k为偏移量，所有的偏移量都是m-k)&lt;/p&gt;
&lt;p&gt;以上两个序列完全等价。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为什么呢？&lt;/p&gt;
&lt;p&gt;因为我们在初始化的时候已经把所有的F[i]都初始化为0了，毫无疑问，f[m-k]=0，而i = m-k+v[0]时的状态也是有f[m-k]转移过来的，很容易得到上面两个序列完全等价，因此，我们这里就不用去枚举所有的体积了，f[m]（体积&amp;lt;=m的情况下，得到的最大价值）就是我们要求的最大价值了。这就与我们的初始化有关了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;变式训练&lt;/strong&gt;：如果我们要求解体积恰好是m的情况下，最大价值是多少，要怎么做呢？&lt;/p&gt;
&lt;p&gt;这就需要在初始化那边做点手脚了，我们只需让f[0] = 0， 其余的f[i] = INF(负无穷)即可。&lt;/p&gt;
&lt;p&gt;因为这样就能确保我们所有状态都是由f[0]转移过来，因为从其他状态转移的话，一定都是负无穷大。&lt;/p&gt;
&lt;h3 id=&#34;第二个登场的是完全背包问题httpswwwacwingcomproblemcontent3&#34;&gt;第二个登场的是：&lt;strong&gt;&lt;a href=&#34;https://www.acwing.com/problem/content/3/&#34;&gt;完全背包问题&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题意：有n件物品和一个容量为m的背包，第i件物品消耗的容量为vi，价值为wi，&lt;strong&gt;每种物品都有无限件可用&lt;/strong&gt;，求解放入哪些物品可以使得背包中总价值最大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很容易发现，两个问题非常像，同样的，先上图！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201014224846721.png&#34; alt=&#34;image-20201014224846721&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201016192237422.png&#34; alt=&#34;image-20201016192237422&#34;&gt;&lt;/p&gt;
&lt;p&gt;图上的解题思路已经分析得很清楚了，下面我们上代码吧！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1010&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; f[N];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; w[N], v[N];

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;n, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;m);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;v[i], &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;w[i]);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v[i]; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; m; j&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
            f[j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(f[j], f[j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; v[i]] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; w[i]);&lt;span style=&#34;color:#75715e&#34;&gt;//这里注意一下j是从小打大枚举就行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        }
    printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, f[m]);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;接下来登场的是多重背包问题httpswwwacwingcomproblemcontent4&#34;&gt;接下来登场的是：&lt;a href=&#34;https://www.acwing.com/problem/content/4/&#34;&gt;多重背包问题&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题意：有N种物品和一个容量为V的背包，第 ii 种物品最多有 si 件，每件体积是 vi，价值是 wi。求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。输出最大价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们首先进行暴力求解，代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1010&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; w[maxn], v[maxn], s[maxn];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; f[maxn][maxn];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m; 
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; v[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; s[i];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; m; j&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; k &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; v[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; s[i] ; k&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)&lt;span style=&#34;color:#75715e&#34;&gt;//这里要特别注意k*v[i] &amp;lt;= j（因为k个第i个物品的体积不能超过总体积）并且k &amp;lt;= s[i](题目要求)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                f[i][j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(f[i][j], f[i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;v[i]] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;w[i]);
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; f[n][m] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;二进制优化&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​		其实我们并不需要枚举所有的s，我们可以通过分组，把很多个小的来拼成一个最大的，利用二进制倍增思想，比如s：1，2，4，8……2^k，c&lt;/p&gt;
&lt;p&gt;容易看出，我们可以把前n-1个拼成最后一个。当然我们的s可能并不是2的整数次方，但是，我们可以求出2^k&amp;lt;=s的最大整数k，然后用s减去前面所有的k个的和，即s-2^k，假设C= s-2^k，很显然C&amp;lt;2^k，因此如果把1到C看做是一段l1，把0到2^k看做是另一段l2，则l1和l2一定相交。因此，中间并没有间隙，即s可以用k个2的i次(i &amp;lt; k)以及C来完美拼接。因此s可以分成Logs组，复杂度为NVlogs=1000* 2000*log2000=2*  *10^7;&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25000&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; w[maxn], v[maxn];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; f[maxn];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; cnt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n ;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, b, s;
        cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; s;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; s){
            cnt &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//编号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            v[cnt] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k;&lt;span style=&#34;color:#75715e&#34;&gt;//分组后每个分割下来的体积
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            w[cnt] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k;&lt;span style=&#34;color:#75715e&#34;&gt;//分组后每个分割下来的重量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            s &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; k;&lt;span style=&#34;color:#75715e&#34;&gt;//减掉2的k次方
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            k &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(s &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
            cnt &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
            v[cnt] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; s;
            w[cnt] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; s;
        }
        
    }
    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cnt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; v[i]; j&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;){
            f[j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(f[j], f[j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; v[i]] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; w[i]);
        }
    }
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; f[m] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一个出场的是：&lt;a href=&#34;https://www.acwing.com/problem/content/9/&#34;&gt;分组背包问题&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有 NN 组物品和一个容量是 VV 的背包。&lt;/p&gt;
&lt;p&gt;每组物品有若干个，同一组内的物品最多只能选一个。
每件物品的体积是 vij，价值是 wij，其中 i 是组号，j 是组内编号。&lt;/p&gt;
&lt;p&gt;求解将哪些物品装入背包，可使物品总体积不超过背包容量，且总价值最大。&lt;/p&gt;
&lt;p&gt;输出最大价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;解题思路&lt;/strong&gt;：枚举第i组物品，选哪个，相当于01背包问题（因为也是每件物品最多选一次）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; f[maxn], v[maxn][maxn], w[maxn][maxn],s[maxn];

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
        cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; s[i];
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; s[i]; j&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
            cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; v[i][j] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w[i][j];
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; j&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; s[i] ; k&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)&lt;span style=&#34;color:#75715e&#34;&gt;//条件添加到循环条件会导致循环提前结束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(v[i][k] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; j)
                f[j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(f[j], f[j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; v[i][k]] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; w[i][k]);
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; f[m] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Qieqiang</title>
      <link>https://Big-Mouth.github.io/posts/qieqiang/</link>
      <pubDate>Sun, 11 Oct 2020 10:08:32 +0800</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/qieqiang/</guid>
      <description>&lt;h1 id=&#34;题解&#34;&gt;题解&lt;/h1&gt;
&lt;h2 id=&#34;贴墙&#34;&gt;贴墙&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题的突破口就在于小瓷砖的面积大小，当墙的面积是2的倍数时，则无法将墙壁都贴满，反之一定能够贴满&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果先将墙的面积算出来的话就需要用到long long的数据类型来储存给的值&lt;/li&gt;
&lt;li&gt;用int应该也是可以的，就这题而言，相乘溢出是不会改变结果的奇偶性的&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
  
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; h, w;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; h &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (h &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; w &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 如果是2的倍数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {              &lt;span style=&#34;color:#75715e&#34;&gt;//如果不是2的倍数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;还有一种更好的办法，不难发现两个正整数相乘结果是奇数的充分必要条件是两个正整数都是奇数，固只需要判断两个数是否同时为奇数（即只要有一个偶数就输出Yes）便可（这是本题真正想考的思路）&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; h, w;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; h &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (h &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; w &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果其中有一个是偶数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;雕像&#34;&gt;雕像&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一道简单的模拟题，需要注意的一个坑就是如果是闰年的2月29日制作的雕像的话，纪念日就要等到闰年才能庆祝一次&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y1, m1, d1, x, y2, m2, d2;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; y1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; d1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; d2;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ans;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果是闰年的2月29号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; y2; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//从第二年开始算,算到今年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果是闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//答案加一
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年是闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//答案减一
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
            }
        }
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&lt;span style=&#34;color:#75715e&#34;&gt;//如果不是，则每年都会有一次纪念日
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; m1) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; m1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; d1) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
        }
    }
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Jjjj</title>
      <link>https://Big-Mouth.github.io/posts/jjjj/</link>
      <pubDate>Sun, 04 Oct 2020 11:52:17 +0800</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/jjjj/</guid>
      <description>&lt;h2 id=&#34;代码宏定义&#34;&gt;代码宏定义&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define ios std::ios::sync_with_stdio(false)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sd(n) scanf(&amp;#34;%d&amp;#34;,&amp;amp;n)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sdd(n,m) scanf(&amp;#34;%d%d&amp;#34;,&amp;amp;n,&amp;amp;m)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sddd(n,m,k) scanf(&amp;#34;%d%d%d&amp;#34;,&amp;amp;n,&amp;amp;m,&amp;amp;k)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pd(n) printf(&amp;#34;%d\n&amp;#34;, (n))
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pdd(n,m) printf(&amp;#34;%d %d\n&amp;#34;, n, m)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pld(n) printf(&amp;#34;%lld\n&amp;#34;, n)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pldd(n,m) printf(&amp;#34;%lld %lld\n&amp;#34;, n, m)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sld(n) scanf(&amp;#34;%lld&amp;#34;,&amp;amp;n)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sldd(n,m) scanf(&amp;#34;%lld%lld&amp;#34;,&amp;amp;n,&amp;amp;m)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define slddd(n,m,k) scanf(&amp;#34;%lld%lld%lld&amp;#34;,&amp;amp;n,&amp;amp;m,&amp;amp;k)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sf(n) scanf(&amp;#34;%lf&amp;#34;,&amp;amp;n)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sff(n,m) scanf(&amp;#34;%lf%lf&amp;#34;,&amp;amp;n,&amp;amp;m)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define sfff(n,m,k) scanf(&amp;#34;%lf%lf%lf&amp;#34;,&amp;amp;n,&amp;amp;m,&amp;amp;k)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define rep(i,a,n) for (int i=a;i&amp;lt;=n;i++)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define per(i,n,a) for (int i=n;i&amp;gt;=a;i--)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define mm(a,n) memset(a, n, sizeof(a))
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pb push_back
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define all(x) (x).begin(),(x).end()
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define fi first
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define se second
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define il inline
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define ll long long
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define lson rt &amp;lt;&amp;lt; 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define rson rt &amp;lt;&amp;lt; 1 | 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MOD 1000000007
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define pi 3.14159265358979323
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define debug(x)               cout &amp;lt;&amp;lt;#x&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;endl
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define debug2(x, y)          cout &amp;lt;&amp;lt;#x&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#y&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;y&amp;lt;&amp;lt;endl;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define debug3(x, y, z)       cout &amp;lt;&amp;lt;#x&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#y&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;y&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#z&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;z&amp;lt;&amp;lt;endl;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define debug4(a, b, c, d)    cout &amp;lt;&amp;lt;#a&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#b&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#c&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&amp;#34; | &amp;#34;&amp;lt;&amp;lt;#d&amp;lt;&amp;lt;&amp;#34;: &amp;#34;&amp;lt;&amp;lt;d&amp;lt;&amp;lt;endl;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; ll &lt;span style=&#34;color:#a6e22e&#34;&gt;INF&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0x3f3f3f3f3f3f3f3fll&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;inf&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0x3f3f3f3f&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; read(T &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;res){&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; flag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; ch;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;isdigit(ch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getchar()))(ch&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;(flag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true);
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ch&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;;isdigit(ch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;getchar());res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(res&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(res&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;ch &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;);flag&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;(res&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;res);}
&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Out(T x){&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)putchar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;),x&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;x;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)Out(x&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);putchar(x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;gcd&lt;/span&gt;(ll a,ll b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;gcd(b,a&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;b)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;a;}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;lcm&lt;/span&gt;(ll a,ll b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;gcd(a,b);}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;pow_mod&lt;/span&gt;(ll x,ll n,ll mod){ll res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(n){&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;res&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;mod;x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;mod;n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res;}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;fact_pow&lt;/span&gt;(ll n,ll p){ll res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(n){n&lt;span style=&#34;color:#f92672&#34;&gt;/=&lt;/span&gt;p;res&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;n;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res;}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;mult&lt;/span&gt;(ll a,ll b,ll p){a&lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt;p;b&lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt;p;ll r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(b){&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(b&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){r&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;v;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(r&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;p)r&lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt;p;}v&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(v&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;p)v&lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt;p;b&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; r;}
ll &lt;span style=&#34;color:#a6e22e&#34;&gt;quick_pow&lt;/span&gt;(ll a,ll b,ll p){ll r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;p;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(b){&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(b&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mult(r,v,p);v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mult(v,v,p);b&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; r;}
&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CH&lt;/span&gt;(ll a,ll n,ll x,ll t)
{ll r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;quick_pow(a,x,n);ll z&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;r;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(ll i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;t;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mult(r,r,n);&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(r&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;z&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;r;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;}
&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Miller_Rabin&lt;/span&gt;(ll n)
{&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;ll x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)){x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;t&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;}srand(time(NULL));
ll o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(ll i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;o;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){ll a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rand()&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(CH(a,n,x,t))&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;}&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;}
&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;int prime[30000010],minprime[30000010];
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;void euler(int n)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{int c=0,i,j;for(i=2;i&amp;lt;=n;i++){if(!minprime[i])prime[++c]=i,minprime[i]=i;for(j=1;j&amp;lt;=c&amp;amp;&amp;amp;i*prime[j]&amp;lt;=n;j++)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{minprime[i*prime[j]]=prime[j];if(i%prime[j]==0)break;}}}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;struct Tree{ll l,r,sum,lazy,maxn,minn;}tree[1000000];
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il void push_up(ll rt)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{tree[rt].sum=tree[rt&amp;lt;&amp;lt;1].sum+tree[rt&amp;lt;&amp;lt;1|1].sum;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt].maxn=max(tree[rt&amp;lt;&amp;lt;1].maxn,tree[rt&amp;lt;&amp;lt;1|1].maxn);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt].minn=min(tree[rt&amp;lt;&amp;lt;1].minn,tree[rt&amp;lt;&amp;lt;1|1].minn);}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il void push_down(ll rt , ll now)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{if(tree[rt].lazy){tree[rt&amp;lt;&amp;lt;1].lazy+=tree[rt].lazy;tree[rt&amp;lt;&amp;lt;1|1].lazy+=tree[rt].lazy;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt&amp;lt;&amp;lt;1].sum+=(now-(now&amp;gt;&amp;gt;1))*tree[rt].lazy;tree[rt&amp;lt;&amp;lt;1|1].sum+=(now&amp;gt;&amp;gt;1)*tree[rt].lazy;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt&amp;lt;&amp;lt;1].minn+=tree[rt].lazy;tree[rt&amp;lt;&amp;lt;1|1].minn+=tree[rt].lazy;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt&amp;lt;&amp;lt;1].maxn+=tree[rt].lazy;tree[rt&amp;lt;&amp;lt;1|1].maxn+=tree[rt].lazy;tree[rt].lazy=0;}}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il void build(ll l , ll r , ll rt , ll *aa)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{tree[rt].lazy=0;tree[rt].l=l;tree[rt].r=r;if(l==r)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{tree[rt].sum=aa[l];tree[rt].minn=tree[rt].sum;tree[rt].maxn=tree[rt].sum;return;}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;ll mid=(l+r)&amp;gt;&amp;gt;1;build(l,mid,rt&amp;lt;&amp;lt;1,aa);build(mid+1,r,rt&amp;lt;&amp;lt;1|1,aa);push_up(rt);}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il void update_range(ll L , ll R , ll key , ll rt)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{if(L&amp;lt;=tree[rt].l&amp;amp;&amp;amp;R&amp;gt;=tree[rt].r){tree[rt].sum+=(tree[rt].r-tree[rt].l+1)*key;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;tree[rt].minn+=key;tree[rt].maxn+=key;tree[rt].lazy+=key;return;}push_down(rt,tree[rt].r-tree[rt].l+1);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;ll mid=(tree[rt].r+tree[rt].l)&amp;gt;&amp;gt;1;if(L&amp;lt;=mid)update_range(L,R,key,lson);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if(R&amp;gt;mid)update_range(L,R,key,rson);push_up(rt);}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il ll query_range(ll L, ll R, ll rt)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{if(L&amp;lt;=tree[rt].l&amp;amp;&amp;amp;R&amp;gt;=tree[rt].r){return tree[rt].sum;}push_down(rt,tree[rt].r-tree[rt].l+1);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;ll mid=(tree[rt].r+tree[rt].l)&amp;gt;&amp;gt;1;ll ans=0;if(L&amp;lt;=mid)ans+=query_range(L,R,lson);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if(R&amp;gt;mid)ans+=query_range(L,R,rson);return ans;}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il ll query_min(ll L,ll R,ll rt)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{if(L&amp;lt;=tree[rt].l&amp;amp;&amp;amp;R&amp;gt;=tree[rt].r){return tree[rt].minn;}push_down(rt,tree[rt].r-tree[rt].l+1);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;ll mid=(tree[rt].r+tree[rt].l)&amp;gt;&amp;gt;1;ll ans=(0x3f3f3f3f3f3f3f3fll);if(L&amp;lt;=mid)ans=min(ans,query_min(L,R,lson));
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if(R&amp;gt;mid)ans=min(ans,query_min(L,R,rson));return ans;}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;il ll query_max(ll L, ll R, ll rt)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{if(L&amp;lt;=tree[rt].l&amp;amp;&amp;amp;R&amp;gt;=tree[rt].r){return tree[rt].maxn;}push_down(rt,tree[rt].r-tree[rt].l+1);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;ll mid=(tree[rt].r+tree[rt].l)&amp;gt;&amp;gt;1;ll ans=-(0x3f3f3f3f3f3f3f3fll);if(L&amp;lt;=mid)ans=max(ans,query_max(L,R,lson));
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if(R&amp;gt;mid)ans=max(ans,query_max(L,R,rson));return ans;}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
ll a[N][N];
map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; , &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;ha;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/bfu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/bfu/</guid>
      <description>&lt;h1 id=&#34;经典并查集&#34;&gt;经典并查集&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;在算法笔记上有一道这样的题目&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;题目描述&#34;&gt;题目描述&lt;/h3&gt;
&lt;p&gt;有一个叫作“数码世界”的奇异空间，在数码世界里生活着许许多多的数码宝贝，其中有些数码宝贝之间可能是好朋友。并且数码世界有两条不成文的规定：
第一，数码宝贝A和数码宝贝B是好朋友等价于数码宝贝B和数码宝贝A是好朋友。
第二，如果数码宝贝A和数码宝贝C是好朋友，而数码宝贝B和数码宝贝C也是好朋友，那么A和B也是好朋友。&lt;/p&gt;
&lt;p&gt;现在给出这些数码宝贝中所有好朋友的信息，问：可以把这些数码宝贝分成多少组，满足每组中的任意两只数码宝贝都是好朋友，且任意两组之间的数码宝贝都不是好朋友。&lt;/p&gt;
&lt;h3 id=&#34;题目分析&#34;&gt;题目分析&lt;/h3&gt;
&lt;p&gt;首先，可以看到这是一个分组类型的题目，把相互之间有关系的元素放在一起（并），查询小组数（查）以及合并后的集合（集）&lt;/p&gt;
&lt;p&gt;因此，这就是一个并查集的模型。可以把题目中给出的好友的关系视为两结点之间的边，那么在输入这些好友关系时，就可以同时把他们合并（这就要求我们写一个合并函数）这样处理完毕之后就得到了一些集合，而集合的个数呢，就是我们所要求的组数。&lt;/p&gt;
&lt;p&gt;那集合的个数要怎么求呢？我们通过观察可以很容易发现：&lt;strong&gt;对于同一个集合来说，只存在唯一的根节点，且将其作为所属集合的标识&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以呢，我们只要用一个bool数组来存储根结点即可，当然要考虑一些细节，比如说，可以在给结点编号的同时，初始化isroot数组为false，那什么时候让它为true呢？&lt;/p&gt;
&lt;p&gt;当然是要写一个findfather函数，在此函数中，可以做两件事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;寻找根节点&lt;/li&gt;
&lt;li&gt;压缩路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，这个直接套模板即可，毫无技术含量。&lt;/p&gt;
&lt;p&gt;在找到了根节点之后，我们就遍历每一个结点，判断如果它是根节点的话，那么直接让他的bool值为true;&lt;/p&gt;
&lt;p&gt;另外，如果还要求分成的组数（但不要求每个集合的元素）的话，就用一个set存储每个根结点的儿子数（每个集合的元素个数）最后输出即可。代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; father[N];
&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; isroot[N];

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;findfather&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {&lt;span style=&#34;color:#75715e&#34;&gt;//查找每个节点所在集合的根节点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;&lt;span style=&#34;color:#75715e&#34;&gt;//
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (x &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; father[x]) {
		x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; father[x];
	}
	&lt;span style=&#34;color:#75715e&#34;&gt;//路径压缩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (a &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; father[a]) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a;&lt;span style=&#34;color:#75715e&#34;&gt;//因为a要被father[a]覆盖掉，所以这里先把原来结点存下来，用于修改father[a]的值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; father[a];&lt;span style=&#34;color:#75715e&#34;&gt;//a不断地回溯父亲结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		father[z] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;&lt;span style=&#34;color:#75715e&#34;&gt;//将原来结点的父亲结点改为根结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Union&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (findfather(a) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; findfather(b)) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
	a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findfather(a);
	b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findfather(b);
	father[a] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b;
	
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		father[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;
		isroot[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false;
	}
}

&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;7 5
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;1 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;2 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;3 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;1 4
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;5 6
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m, a, b;
	scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;n, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;m);
	init(n);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; m; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		scanf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;a, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;b);
		Union(a, b);
	}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ans[N] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; };
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		isroot[findfather(i)] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;
	}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (father[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; findfather(i))
			ans[findfather(i)]&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
	}
	set&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; root;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (isroot[i]) {
			root.insert(i);
		}
	}
	vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; result;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (father[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; findfather(i))
			result.push_back(i);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; it &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root.begin(); it &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; root.end(); it&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d %d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it, ans[&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it]);
	}
		
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是，如果题目要求每个集合的根节点以及对应的子节点的话，就需要用map存储每个跟结点对应的子节点（容易看出，这是&lt;strong&gt;一对多&lt;/strong&gt;，因此，我们用一个vector数组来存所有的子节点）&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; max_union_find_set &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; father[max_union_find_set] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; };

&lt;span style=&#34;color:#75715e&#34;&gt;//初始化
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init_father&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&lt;span style=&#34;color:#75715e&#34;&gt;//n 表示共有多少个数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		father[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;
	}
}

&lt;span style=&#34;color:#75715e&#34;&gt;//查找x所在集合的父结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;find_father&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; current_temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;&lt;span style=&#34;color:#75715e&#34;&gt;//current_temp为最初查找结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (x &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; father[x])
	{
		x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; father[x];
	}
	&lt;span style=&#34;color:#75715e&#34;&gt;//当前 x 为根结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;//路径压缩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (current_temp &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; father[current_temp])
	{
		&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; current_temp;&lt;span style=&#34;color:#75715e&#34;&gt;//临时保存当前结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		current_temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; father[temp];&lt;span style=&#34;color:#75715e&#34;&gt;//往上查找
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		father[temp] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;&lt;span style=&#34;color:#75715e&#34;&gt;//进行路径压缩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x;
}

&lt;span style=&#34;color:#75715e&#34;&gt;//合并两个元素到一个集合
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;union_father&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; father_a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; find_father(a);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; father_b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; find_father(b);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (father_a &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; father_b)
	{
		father[father_a] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; father_b;
	}
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {

	
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, m;&lt;span style=&#34;color:#75715e&#34;&gt;//n 表示共有多少个数字，m 表示好朋友的组数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m;
	&lt;span style=&#34;color:#75715e&#34;&gt;//初始化 father 数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	init_father(n);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, b;&lt;span style=&#34;color:#75715e&#34;&gt;// a ，b 分别表示输入的具体数字，即 a 和 b 为好朋友
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; m; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; b;
		union_father(a, b);&lt;span style=&#34;color:#75715e&#34;&gt;//合并两个数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}
	map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; root_map;&lt;span style=&#34;color:#75715e&#34;&gt;//保存每个根结点及其子结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
	vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; result;&lt;span style=&#34;color:#75715e&#34;&gt;// 存放根结点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; find_father(i);
		result.push_back(root);&lt;span style=&#34;color:#75715e&#34;&gt;//这里注意重复的元素也要加入result中，因为下面要用map一一对应
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}
	&lt;span style=&#34;color:#75715e&#34;&gt;//此处vector&amp;lt;int&amp;gt;::iterator建议改用auto
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;::&lt;/span&gt;iterator it &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result.begin();it &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; result.end();it&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)    
	{  &lt;span style=&#34;color:#75715e&#34;&gt;//得出根结点和每个根结点对应的子节点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it);
		vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; child;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n;i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
		{
			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (father[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; root)&lt;span style=&#34;color:#75715e&#34;&gt;//一定要注明：这里i不能为自身，因为它指的是子节点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			{
				child.push_back(i);
			}
		}
		root_map.insert(pair&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;(root, child));&lt;span style=&#34;color:#75715e&#34;&gt;//注意map包含里面用的是pair，把这个写法记一下
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}

	cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;组数为：&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; root_map.size() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;,vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;::&lt;/span&gt;iterator it &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root_map.begin();it &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; root_map.end();it&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;根结点为：&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it).first &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it).second.size() &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#75715e&#34;&gt;//要存在孩子结点才输出
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		{
			cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;其子结点分别为：&amp;#34;&lt;/span&gt;;
		}
		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;::&lt;/span&gt;iterator vit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it).second.begin();vit &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it).second.end();vit&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;//这里要特别注意，这里的vit可千万不能写成it，我就是在这里犯了个低级错误导致浪费了我好多时间去debug。也要注意这里的写法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		{
			cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;vit) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;;
		}
		cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
	}
	system(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行结果图如下：&lt;/p&gt;
&lt;p&gt;![](C:\Users\Administrator\Pictures\Camera Roll\QQ截图20201005203128.png)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/leetcode_5515/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/leetcode_5515/</guid>
      <description>&lt;p&gt;请你给一个停车场设计一个停车系统。停车场总共有三种不同大小的车位：大，中和小，每种尺寸分别有固定数目的车位。&lt;/p&gt;
&lt;p&gt;请你实现 &lt;code&gt;ParkingSystem&lt;/code&gt; 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ParkingSystem(int big, int medium, int small) 初始化 ParkingSystem 类，三个参数分别对应每种停车位的数目。&lt;/li&gt;
&lt;li&gt;bool addCar(int carType) 检车是否有 carType 对应的停车位。 carType 有三种类型：大，中，小，分别用数字 1， 2 和 3 表示。一辆车只能停在  carType 对应尺寸的停车位中。如果没有空车位，请返回 false ，否则将该车停入车位并返回 true 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/design-parking-system&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;输入：
[&amp;#34;ParkingSystem&amp;#34;, &amp;#34;addCar&amp;#34;, &amp;#34;addCar&amp;#34;, &amp;#34;addCar&amp;#34;, &amp;#34;addCar&amp;#34;]
[[1, 1, 0], [1], [2], [3], [1]]
输出：
[null, true, true, false, false]

解释：
ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);
parkingSystem.addCar(1); // 返回 true ，因为有 1 个空的大车位
parkingSystem.addCar(2); // 返回 true ，因为有 1 个空的中车位
parkingSystem.addCar(3); // 返回 false ，因为没有空的小车位
parkingSystem.addCar(1); // 返回 false ，因为没有空的大车位，唯一一个大车位已经被占据了

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/design-parking-system
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;class ParkingSystem:
def &lt;strong&gt;init&lt;/strong&gt;(self, big: int, medium: int, small: int):&lt;br&gt;
self.big = big
self.medium = medium
self.small = small
def addCar(self, carType: int) -&amp;gt; bool:
if carType == 1:
if self.big &amp;gt; 0:
self.big -= 1
return True
else:
return False
elif carType == 2:
if self.medium &amp;gt; 0:
self.medium -= 1
return True
else:
return False
elif carType == 3:
if self.small &amp;gt; 0:
self.small -= 1
return True
else:
return False
return False&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/markdown_start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/markdown_start/</guid>
      <description>&lt;h2 id=&#34;markdown的简介&#34;&gt;markdown的简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;markdown是一种轻量级的标记语言 理念Mark&lt;/p&gt;
&lt;p&gt;超级文本标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;标题&#34;&gt;标题&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;www.baidu.com&#34;&gt;百度一下&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ctrl+数字+1-5可以快速选中文字变成对应的标题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ctrl+加号对标题进行加&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;段落&#34;&gt;段落&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;语法：直接进行文字编辑 如需直接换行或在段落中回车&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.字体&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;1.粗体： &lt;strong&gt;这是粗体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.删除线：用一对双票号进行包裹&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;

这是一对删除线 ~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;这是一对删除线&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; 这是一条下划线&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;加粗 ctrl + B&lt;/p&gt;
&lt;p&gt;斜体 ctrl + I&lt;/p&gt;
&lt;p&gt;下划线 ctrl+ u&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;这是加粗ctrl+B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这是斜体 ctrl+I&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;这是下划线 ctrl+u&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;下面给大家讲一下分隔符&lt;/p&gt;
&lt;p&gt;分割线&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;分割线： 三个减号回车&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;--- + enter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;3.脚注的注释&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[^键入文本]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;这是一个技术&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;四列表&#34;&gt;四、列表&lt;/h2&gt;
&lt;p&gt;1、无序列表&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* 空格
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只有同一级别&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;一级分类
&lt;ul&gt;
&lt;li&gt;苹果&lt;/li&gt;
&lt;li&gt;香蕉&lt;/li&gt;
&lt;li&gt;橘子&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1.这是第一个
&lt;ul&gt;
&lt;li&gt;这是子内容&lt;/li&gt;
&lt;li&gt;这是子内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2.这是第二个&lt;/li&gt;
&lt;li&gt;第三个标题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我是一个大闸蟹&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;spring boot 技术&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;请相信我&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;二级分类&lt;/li&gt;
&lt;li&gt;这是内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;六代码块的显示&#34;&gt;六、代码块的显示&lt;/h2&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text/java/c++/c#/js&#34; data-lang=&#34;text/java/c++/c#/js&#34;&gt;​``` C++

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;pubic &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;链接&#34;&gt;链接&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;www.buidu.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;www.baidu.com&#34;&gt;百度一下&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;图片插入&#34;&gt;图片插入&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;![自定义图片名称](图片的路径)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;![这是picture](C:\Users\Administrator\Pictures\Camera Roll\20200910154111.png)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;表格&#34;&gt;表格&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;|表头|表头|表头|
|---|---|---|
|1|2|23|3|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;快捷键：&lt;/p&gt;
&lt;p&gt;ctrl +T（table)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;十其他操作&#34;&gt;十、其他操作&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;``
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;shift&lt;/code&gt;+&lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;shift&lt;/code&gt;+&lt;code&gt;/&lt;/code&gt;：注释&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; it &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;![这是一张萌图](C:\Users\Administrator\Pictures\Camera Roll\timg (2).jpg)-&lt;/p&gt;
&lt;h1 id=&#34;latex公式手册全网最全httpswwwcnblogscom1024thp11623258html&#34;&gt;&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html&#34;&gt;LaTeX公式手册(全网最全)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;本手册全新编排版正在施工，感兴趣的戳&lt;a href=&#34;https://1024th.github.io/MathJax_Tutorial_CN/&#34;&gt;这里&lt;/a&gt;！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考维基百科的&lt;a href=&#34;https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F&#34;&gt;数学公式教程&lt;/a&gt;
参考&lt;a href=&#34;https://www.zybuluo.com/codeep/note/163962#%E4%B8%83%E4%BA%A4%E6%8D%A2%E5%9B%BE%E8%A1%A8%E4%BD%BF%E7%94%A8%E5%8F%82%E8%80%83&#34;&gt;Cmd Markdown 公式指导手册&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文为 MathJax 在 Markdown 环境下的语法指引。&lt;/p&gt;
&lt;h2 id=&#34;如何插入公式httpswwwcnblogscom1024thp11623258html3540112123&#34;&gt;如何插入公式&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3540112123&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;L&lt;strong&gt;A&lt;/strong&gt;T&lt;strong&gt;E&lt;/strong&gt;X&lt;/em&gt; 的数学公式有两种：行中公式和独立公式（行间公式）。行中公式放在文中与其它文字混编，独立公式单独成行。&lt;/p&gt;
&lt;p&gt;行中公式可以用如下方法表示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ 数学公式 $
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;独立公式可以用如下方法表示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ 数学公式 $$
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;函数符号及特殊字符httpswwwcnblogscom1024thp11623258html3234424027&#34;&gt;函数、符号及特殊字符&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3234424027&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;声调--变音符号httpswwwcnblogscom1024thp11623258html1354998914&#34;&gt;声调 / 变音符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1354998914&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\dot{a}, \ddot{a}, \acute{a}, \grave{a}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;˙&lt;em&gt;a&lt;/em&gt;,¨&lt;em&gt;a&lt;/em&gt;,ˊ&lt;em&gt;a&lt;/em&gt;,ˊ&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\check{a}, \breve{a}, \tilde{a}, \bar{a}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ˇ&lt;em&gt;a&lt;/em&gt;,˘&lt;em&gt;a&lt;/em&gt;,˜&lt;em&gt;a&lt;/em&gt;,ˉ&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\hat{a}, \widehat{a}, \vec{a}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ˆ&lt;em&gt;a&lt;/em&gt;,ˆ&lt;em&gt;a&lt;/em&gt;,→&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;标准函数httpswwwcnblogscom1024thp11623258html4274214312&#34;&gt;标准函数&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#4274214312&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;指数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\exp_a b = a^b, \exp b = e^b, 10^m
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;exp&lt;em&gt;a**b&lt;/em&gt;=&lt;em&gt;a**b&lt;/em&gt;,exp&lt;em&gt;b&lt;/em&gt;=&lt;em&gt;e**b&lt;/em&gt;,10&lt;em&gt;m&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;对数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\ln c, \lg d = \log e, \log_{10} f
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ln&lt;em&gt;c&lt;/em&gt;,lg&lt;em&gt;d&lt;/em&gt;=log&lt;em&gt;e&lt;/em&gt;,log10&lt;em&gt;f&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;三角函数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\sin a, \cos b, \tan c, \cot d, \sec e, \csc f
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;sin&lt;em&gt;a&lt;/em&gt;,cos&lt;em&gt;b&lt;/em&gt;,tan&lt;em&gt;c&lt;/em&gt;,cot&lt;em&gt;d&lt;/em&gt;,sec&lt;em&gt;e&lt;/em&gt;,csc&lt;em&gt;f&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\arcsin a, \arccos b, \arctan c
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;arcsin&lt;em&gt;a&lt;/em&gt;,arccos&lt;em&gt;b&lt;/em&gt;,arctan&lt;em&gt;c&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\arccot d, \arcsec e, \arccsc f
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;arccot&lt;em&gt;d&lt;/em&gt;,arcsec&lt;em&gt;e&lt;/em&gt;,arccsc&lt;em&gt;f&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\sinh a, \cosh b, \tanh c, \coth d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;sinh&lt;em&gt;a&lt;/em&gt;,cosh&lt;em&gt;b&lt;/em&gt;,tanh&lt;em&gt;c&lt;/em&gt;,coth&lt;em&gt;d&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\operatorname{sh}k, \operatorname{ch}l, \operatorname{th}m, \operatorname{coth}n
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;sh&lt;em&gt;k&lt;/em&gt;,ch&lt;em&gt;l&lt;/em&gt;,th&lt;em&gt;m&lt;/em&gt;,coth&lt;em&gt;n&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\operatorname{argsh}o, \operatorname{argch}p, \operatorname{argth}q
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;argsh&lt;em&gt;o&lt;/em&gt;,argch&lt;em&gt;p&lt;/em&gt;,argth&lt;em&gt;q&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;符号函数，绝对值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\sgn r, \left\vert s \right\vert
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;sgn&lt;em&gt;r&lt;/em&gt;,|&lt;em&gt;s&lt;/em&gt;|&lt;/p&gt;
&lt;p&gt;最大值，最小值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\min(x,y), \max(x,y)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;min(&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;),max(&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;)&lt;/p&gt;
&lt;h3 id=&#34;界限极限httpswwwcnblogscom1024thp11623258html708635433&#34;&gt;界限，极限&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#708635433&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\min x, \max y, \inf s, \sup t
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;min&lt;em&gt;x&lt;/em&gt;,max&lt;em&gt;y&lt;/em&gt;,inf&lt;em&gt;s&lt;/em&gt;,sup&lt;em&gt;t&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\lim u, \liminf v, \limsup w
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lim&lt;em&gt;u&lt;/em&gt;,lim inf&lt;em&gt;v&lt;/em&gt;,lim sup&lt;em&gt;w&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\lim_{x \to \infty} \frac{1}{n(n+1)}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lim&lt;em&gt;x&lt;/em&gt;→∞1&lt;em&gt;n&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;+1)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\dim p, \deg q, \det m, \ker\phi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;dim&lt;em&gt;p&lt;/em&gt;,deg&lt;em&gt;q&lt;/em&gt;,det&lt;em&gt;m&lt;/em&gt;,ker&lt;em&gt;ϕ&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;投射httpswwwcnblogscom1024thp11623258html4241001162&#34;&gt;投射&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#4241001162&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\Pr j, \hom l, \lVert z \rVert, \arg z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pr&lt;em&gt;j&lt;/em&gt;,hom&lt;em&gt;l&lt;/em&gt;,‖&lt;em&gt;z&lt;/em&gt;‖,arg&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;微分及导数httpswwwcnblogscom1024thp11623258html1199618392&#34;&gt;微分及导数&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1199618392&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;dt, \mathrm{d}t, \partial t, \nabla\psi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;d**t&lt;/em&gt;,d&lt;em&gt;t&lt;/em&gt;,∂&lt;em&gt;t&lt;/em&gt;,∇&lt;em&gt;ψ&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dy/dx, \mathrm{d}y/\mathrm{d}x, \frac{dy}{dx}, \frac{\mathrm{d}y}{\mathrm{d}x}, \frac{\partial^2}{\partial x_1\partial x_2}y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;d**y&lt;/em&gt;/&lt;em&gt;d**x&lt;/em&gt;,d&lt;em&gt;y&lt;/em&gt;/d&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;d&lt;strong&gt;y&lt;/strong&gt;d**x&lt;/em&gt;,d&lt;em&gt;y&lt;/em&gt;d&lt;em&gt;x&lt;/em&gt;,∂2∂&lt;em&gt;x&lt;/em&gt;1∂&lt;em&gt;x&lt;/em&gt;2&lt;em&gt;y&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\prime, \backprime, f^\prime, f&#39;, f&#39;&#39;, f^{(3)}, \dot y, \ddot y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;′,&lt;em&gt;‵&lt;/em&gt;,&lt;em&gt;f&lt;/em&gt;′,&lt;em&gt;f&lt;/em&gt;′,&lt;em&gt;f&lt;/em&gt;″,&lt;em&gt;f&lt;/em&gt;(3),˙&lt;em&gt;y&lt;/em&gt;,¨&lt;em&gt;y&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;类字母符号及常数httpswwwcnblogscom1024thp11623258html454150854&#34;&gt;类字母符号及常数&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#454150854&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\infty, \aleph, \complement, \backepsilon, \eth, \Finv, \hbar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∞,ℵ,&lt;em&gt;∁&lt;/em&gt;,∍,ð,&lt;em&gt;Ⅎ&lt;/em&gt;,&lt;em&gt;ℏ&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Im, \imath, \jmath, \Bbbk, \ell, \mho, \wp, \Re, \circledS
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ℑ,&lt;em&gt;ı&lt;/em&gt;,&lt;em&gt;ȷ&lt;/em&gt;,k,&lt;em&gt;ℓ&lt;/em&gt;,&lt;em&gt;℧&lt;/em&gt;,℘,ℜ,Ⓢ&lt;/p&gt;
&lt;h3 id=&#34;模运算httpswwwcnblogscom1024thp11623258html2309199712&#34;&gt;模运算&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2309199712&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;s_k \equiv 0 \pmod{m}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;s**k&lt;/em&gt;≡0(mod&lt;em&gt;m&lt;/em&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a \bmod b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;mod&lt;em&gt;b&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\gcd(m, n), \operatorname{lcm}(m, n)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;gcd(&lt;em&gt;m&lt;/em&gt;,&lt;em&gt;n&lt;/em&gt;),lcm(&lt;em&gt;m&lt;/em&gt;,&lt;em&gt;n&lt;/em&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mid, \nmid, \shortmid, \nshortmid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∣,∤,∣,∤&lt;/p&gt;
&lt;h3 id=&#34;根号httpswwwcnblogscom1024thp11623258html1962525058&#34;&gt;根号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1962525058&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\surd, \sqrt{2}, \sqrt[n]{}, \sqrt[3]{\frac{x^3+y^3}{2}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;√,√2,&lt;em&gt;n&lt;/em&gt;√,3√&lt;em&gt;x&lt;/em&gt;3+&lt;em&gt;y&lt;/em&gt;32&lt;/p&gt;
&lt;h3 id=&#34;运算符httpswwwcnblogscom1024thp11623258html1308888049&#34;&gt;运算符&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1308888049&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;+, -, \pm, \mp, \dotplus
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;+,−,±,∓,∔&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\times, \div, \divideontimes, /, \backslash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;×,÷,⋇,/,∖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\cdot, * \ast, \star, \circ, \bullet
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⋅,∗∗,⋆,∘,∙&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boxplus, \boxminus, \boxtimes, \boxdot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊞,⊟,⊠,⊡&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\oplus, \ominus, \otimes, \oslash, \odot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊕,⊖,⊗,⊘,⊙&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\circleddash, \circledcirc, \circledast
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊝,⊚,⊛&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\bigoplus, \bigotimes, \bigodot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⨁,⨂,⨀&lt;/p&gt;
&lt;h3 id=&#34;集合httpswwwcnblogscom1024thp11623258html3118160355&#34;&gt;集合&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3118160355&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\{ \}, \O \empty \emptyset, \varnothing
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{},∅∅∅,&lt;em&gt;∅&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\in, \notin \not\in, \ni, \not\ni
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∈,∉∉,∋,∌&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\cap, \Cap, \sqcap, \bigcap
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∩,⋒,⊓,⋂&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\cup, \Cup, \sqcup, \bigcup, \bigsqcup, \uplus, \biguplus
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∪,⋓,⊔,⋃,⨆,⊎,⨄&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\setminus, \smallsetminus, \times
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∖,∖,×&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\subset, \Subset, \sqsubset
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊂,⋐,⊏&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\supset, \Supset, \sqsupset
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊃,⋑,⊐&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\subseteq, \nsubseteq, \subsetneq, \varsubsetneq, \sqsubseteq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊆,⊈,⊊,⊊,⊑&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\supseteq, \nsupseteq, \supsetneq, \varsupsetneq, \sqsupseteq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊇,⊉,⊋,⊋,⊒&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\subseteqq, \nsubseteqq, \subsetneqq, \varsubsetneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⫅,⊈,⫋,⫋&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\supseteqq, \nsupseteqq, \supsetneqq, \varsupsetneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⫆,⊉,⫌,⫌&lt;/p&gt;
&lt;h3 id=&#34;关系符号httpswwwcnblogscom1024thp11623258html4218233797&#34;&gt;关系符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#4218233797&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;=, \ne, \neq, \equiv, \not\equiv
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;=,≠,≠,≡,≢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\doteq, \doteqdot,` `\overset{\underset{\mathrm{def}}{}}{=},` `:=
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≐,≑,def=,:=&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\sim, \nsim, \backsim, \thicksim, \simeq, \backsimeq, \eqsim, \cong, \ncong
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∼,≁,∽,∼,≃,⋍,≂,≅,≆&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\approx, \thickapprox, \approxeq, \asymp, \propto, \varpropto
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≈,≈,≊,≍,∝,∝&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;, \nless, \ll, \not\ll, \lll, \not\lll, \lessdot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;lt;,≮,≪,≪̸,⋘,⋘̸,⋖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;, \ngtr, \gg, \not\gg, \ggg, \not\ggg, \gtrdot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;gt;,≯,≫,≫̸,⋙,⋙̸,⋗&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\le, \leq, \lneq, \leqq, \nleq, \nleqq, \lneqq, \lvertneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≤,≤,⪇,≦,≰,≰,≨,≨&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\ge, \geq, \gneq, \geqq, \ngeq, \ngeqq, \gneqq, \gvertneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≥,≥,⪈,≧,≱,≱,≩,≩&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\lessgtr, \lesseqgtr, \lesseqqgtr, \gtrless, \gtreqless, \gtreqqless
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≶,⋚,⪋,≷,⋛,⪌&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\leqslant, \nleqslant, \eqslantless
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⩽,⪇,⪕&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\geqslant, \ngeqslant, \eqslantgtr
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⩾,⪈,⪖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\lesssim, \lnsim, \lessapprox, \lnapprox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≲,⋦,⪅,⪉&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\gtrsim, \gnsim, \gtrapprox, \gnapprox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≳,⋧,⪆,⪊&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\prec, \nprec, \preceq, \npreceq, \precneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≺,⊀,⪯,⋠,⪵&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\succ, \nsucc, \succeq, \nsucceq, \succneqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≻,⊁,⪰,⋡,⪶&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\preccurlyeq, \curlyeqprec
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≼,⋞&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\succcurlyeq, \curlyeqsucc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≽,⋟&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\precsim, \precnsim, \precapprox, \precnapprox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≾,⋨,⪷,⪹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\succsim, \succnsim, \succapprox, \succnapprox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≿,⋩,⪸,⪺&lt;/p&gt;
&lt;h3 id=&#34;几何符号httpswwwcnblogscom1024thp11623258html847763673&#34;&gt;几何符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#847763673&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\parallel, \nparallel, \shortparallel, \nshortparallel
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∥,∦,∥,∦&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\perp, \angle, \sphericalangle, \measuredangle, 45^\circ
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊥,∠,&lt;em&gt;∢&lt;/em&gt;,&lt;em&gt;∡&lt;/em&gt;,45∘&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Box, \blacksquare, \diamond, \Diamond \lozenge, \blacklozenge, \bigstar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;◻&lt;/em&gt;,&lt;em&gt;◼&lt;/em&gt;,⋄,&lt;em&gt;◊**◊&lt;/em&gt;,&lt;em&gt;⧫&lt;/em&gt;,&lt;em&gt;★&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\bigcirc, \triangle, \bigtriangleup, \bigtriangledown
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;◯,△,△,▽&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\vartriangle, \triangledown
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;△,&lt;em&gt;▽&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\blacktriangle, \blacktriangledown, \blacktriangleleft, \blacktriangleright
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;▴&lt;/em&gt;,&lt;em&gt;▾&lt;/em&gt;,◂,▸&lt;/p&gt;
&lt;h3 id=&#34;逻辑符号httpswwwcnblogscom1024thp11623258html2225859126&#34;&gt;逻辑符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2225859126&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\forall, \exists, \nexists
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∀,∃,&lt;em&gt;∄&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\therefore, \because, \And
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∴,∵,&amp;amp;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\or \lor \vee, \curlyvee, \bigvee
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∨,∨,∨,⋎,⋁&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\and \land \wedge, \curlywedge, \bigwedge
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∧,∧,∧,⋏,⋀&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\bar{q}, \bar{abc}, \overline{q}, \overline{abc},
\lnot \neg, \not\operatorname{R}, \bot, \top
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ˉ&lt;em&gt;q&lt;/em&gt;,¯&lt;em&gt;a&lt;strong&gt;b&lt;/strong&gt;c&lt;/em&gt;,¯&lt;em&gt;q&lt;/em&gt;,¯&lt;em&gt;a&lt;strong&gt;b&lt;/strong&gt;c&lt;/em&gt;,&lt;/p&gt;
&lt;p&gt;¬¬,⧸R,⊥,⊤&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\vdash \dashv, \vDash, \Vdash, \models
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊢,⊣,⊨,⊩,⊨&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Vvdash \nvdash \nVdash \nvDash \nVDash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊪,⊬,⊮,⊭,⊯&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\ulcorner \urcorner \llcorner \lrcorner
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⌜⌝⌞⌟&lt;/p&gt;
&lt;h3 id=&#34;箭头httpswwwcnblogscom1024thp11623258html2607114365&#34;&gt;箭头&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2607114365&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\Rrightarrow, \Lleftarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇛,⇚&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Rightarrow, \nRightarrow, \Longrightarrow \implies
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇒,⇏,⟹,⟹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Leftarrow, \nLeftarrow, \Longleftarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇐,⇍,⟸&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Leftrightarrow, \nLeftrightarrow, \Longleftrightarrow \iff
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇔,⇎,⟺⟺&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Uparrow, \Downarrow, \Updownarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇑,⇓,⇕&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\rightarrow \to, \nrightarrow, \longrightarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;→→,↛,⟶&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\leftarrow \gets, \nleftarrow, \longleftarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;←←,↚,⟵&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\leftrightarrow, \nleftrightarrow, \longleftrightarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↔,↮,⟷&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\uparrow, \downarrow, \updownarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↑,↓,↕&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\nearrow, \swarrow, \nwarrow, \searrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↗,↙,↖,↘&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mapsto, \longmapsto
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↦,⟼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\rightharpoonup \rightharpoondown \leftharpoonup \leftharpoondown \upharpoonleft \upharpoonright \downharpoonleft \downharpoonright \rightleftharpoons \leftrightharpoons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇀,⇁,↼,↽,↿,↾,⇃,⇂,⇌,⇋&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\curvearrowleft \circlearrowleft \Lsh \upuparrows \rightrightarrows \rightleftarrows \rightarrowtail \looparrowright
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↶,↺,↰,⇈,⇉,⇄,↣,↬&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\curvearrowright \circlearrowright \Rsh \downdownarrows \leftleftarrows \leftrightarrows \leftarrowtail \looparrowleft
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↷,↻,↱,⇊,⇇,⇆,↢,↫&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\hookrightarrow \hookleftarrow \multimap \leftrightsquigarrow \rightsquigarrow \twoheadrightarrow \twoheadleftarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↪,↩,⊸,↭,⇝,↠,↞&lt;/p&gt;
&lt;h3 id=&#34;特殊符号httpswwwcnblogscom1024thp11623258html2696449244&#34;&gt;特殊符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2696449244&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;省略号：数学公式中常见的省略号有两种，&lt;code&gt;\ldots&lt;/code&gt; 表示与文本底线对齐的省略号，&lt;code&gt;\cdots&lt;/code&gt; 表示与文本中线对齐的省略号。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\amalg \% \dagger \ddagger \ldots \cdots
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⨿%†‡…⋯&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\smile \frown \wr \triangleleft \triangleright
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⌣⌢≀◃▹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\diamondsuit, \heartsuit, \clubsuit, \spadesuit, \Game, \flat, \natural, \sharp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;♢,♡,♣,♠,&lt;em&gt;⅁&lt;/em&gt;,♭,♮,♯&lt;/p&gt;
&lt;h3 id=&#34;未分类httpswwwcnblogscom1024thp11623258html1478390172&#34;&gt;未分类&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1478390172&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\diagup \diagdown \centerdot \ltimes \rtimes \leftthreetimes \rightthreetimes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;╱&lt;/em&gt;,&lt;em&gt;╲&lt;/em&gt;,⋅,⋉,⋊,⋋,⋌&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\eqcirc \circeq \triangleq \bumpeq \Bumpeq \doteqdot \risingdotseq \fallingdotseq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;≖,≗,≜,≏,≎,≑,≓,≒&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\intercal \barwedge \veebar \doublebarwedge \between \pitchfork
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊺,⊼,⊻,⩞,≬,⋔&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\vartriangleleft \ntriangleleft \vartriangleright \ntriangleright
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊲,⋪,⊳,⋫&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\trianglelefteq \ntrianglelefteq \trianglerighteq \ntrianglerighteq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⊴,⋬,⊵,⋭&lt;/p&gt;
&lt;p&gt;关于这些符号的更多语义，参阅 &lt;a href=&#34;https://web.archive.org/web/20160305074303/https://www.math.upenn.edu/tex-stuff/cookbook.pdf&#34;&gt;TeX Cookbook&lt;/a&gt; 的简述。&lt;/p&gt;
&lt;h2 id=&#34;上标下标及积分等httpswwwcnblogscom1024thp11623258html2851036427&#34;&gt;上标、下标及积分等&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2851036427&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;功能|语法|效果&lt;/p&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt; 表示上标, &lt;code&gt;_&lt;/code&gt; 表示下标。如果上下标的内容多于一个字符，需要用 &lt;code&gt;{}&lt;/code&gt; 将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。&lt;/p&gt;
&lt;p&gt;上标&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a^2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;2&lt;/p&gt;
&lt;p&gt;下标&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a_2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;2&lt;/p&gt;
&lt;p&gt;组合&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a^{2+2}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;2+2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a_{i,j}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a**i&lt;/em&gt;,&lt;em&gt;j&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;结合上下标&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x_2^3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;/em&gt;32&lt;/p&gt;
&lt;p&gt;前置上下标&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{}_1^2\!X_3^4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;21&lt;em&gt;X&lt;/em&gt;43&lt;/p&gt;
&lt;p&gt;导数（&lt;strong&gt;HTML&lt;/strong&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;/em&gt;′&lt;/p&gt;
&lt;p&gt;导数（&lt;strong&gt;PNG&lt;/strong&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x^\prime
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;/em&gt;′&lt;/p&gt;
&lt;p&gt;导数（&lt;strong&gt;错误&lt;/strong&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x\prime
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;/em&gt;′&lt;/p&gt;
&lt;p&gt;导数点&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\dot{x}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;˙&lt;em&gt;x&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\ddot{y}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;¨&lt;em&gt;y&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;向量&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\vec{c}&lt;/code&gt;（只有一个字母）&lt;/p&gt;
&lt;p&gt;→&lt;em&gt;c&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overleftarrow{a b}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;←&lt;em&gt;a**b&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overrightarrow{c d}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;→&lt;em&gt;c**d&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overleftrightarrow{a b}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↔&lt;em&gt;a**b&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\widehat{e f g}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;^&lt;em&gt;e&lt;strong&gt;f&lt;/strong&gt;g&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;上弧&lt;/p&gt;
&lt;p&gt;（注: 正确应该用 \overarc，但在这里行不通。要用建议的语法作为解决办法。）（使用 \ overarc 时需要引入 {arcs} 包。）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overset{\frown} {AB}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⌢&lt;em&gt;A**B&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;上划线&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overline{h i j}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;¯&lt;em&gt;h&lt;strong&gt;i&lt;/strong&gt;j&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下划线&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\underline{k l m}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;k&lt;strong&gt;l&lt;/strong&gt;m&lt;/em&gt;_&lt;/p&gt;
&lt;p&gt;上括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\overbrace{1+2+\cdots+100}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⏞1+2+⋯+100&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} 5050 \\ \overbrace{ 1+2+\cdots+100 } \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5050⏞1+2+⋯+100&lt;/p&gt;
&lt;p&gt;下括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\underbrace{a+b+\cdots+z}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;+⋯+&lt;em&gt;z&lt;/em&gt;⏟&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} \underbrace{ a+b+\cdots+z } \\ 26 \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a&lt;/em&gt;+&lt;em&gt;b&lt;/em&gt;+⋯+&lt;em&gt;z&lt;/em&gt;⏟26&lt;/p&gt;
&lt;p&gt;求和（累加）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\sum_{k=1}^N k^2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;N&lt;/em&gt;∑&lt;em&gt;k&lt;/em&gt;=1&lt;em&gt;k&lt;/em&gt;2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} \sum_{k=1}^N k^2 \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∑&lt;em&gt;N**k&lt;/em&gt;=1&lt;em&gt;k&lt;/em&gt;2&lt;/p&gt;
&lt;p&gt;求积（累乘）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\prod_{i=1}^N x_i
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;N&lt;/em&gt;∏&lt;em&gt;i&lt;/em&gt;=1&lt;em&gt;x**i&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} \prod_{i=1}^N x_i \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∏&lt;em&gt;N**i&lt;/em&gt;=1&lt;em&gt;x**i&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;上积&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\coprod_{i=1}^N x_i
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;N&lt;/em&gt;∐&lt;em&gt;i&lt;/em&gt;=1&lt;em&gt;x**i&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} \coprod_{i=1}^N x_i \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∐&lt;em&gt;N**i&lt;/em&gt;=1&lt;em&gt;x**i&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;极限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\lim_{n \to \infty}x_n
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lim&lt;em&gt;n&lt;/em&gt;→∞&lt;em&gt;x**n&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\begin{matrix} \lim_{n \to \infty}x_n \end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lim&lt;em&gt;n&lt;/em&gt;→∞&lt;em&gt;x**n&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;积分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\int_{-N}^{N} e^x\, {\rm d}x
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∫&lt;em&gt;N&lt;/em&gt;−&lt;em&gt;N&lt;strong&gt;e&lt;/strong&gt;x&lt;/em&gt;d&lt;em&gt;x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本例中 &lt;code&gt;\,&lt;/code&gt; 和 &lt;code&gt;{\rm d}&lt;/code&gt; 部分可省略，但建议加入，能使式子更美观。&lt;code&gt;{\rm d}&lt;/code&gt;可以用&lt;code&gt;\mathrm{d}&lt;/code&gt;等价替换。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\begin{matrix} \int_{-N}^{N} e^x\, \mathrm{d}x \end{matrix}&lt;/code&gt;（矩阵中积分符号变小）&lt;/p&gt;
&lt;p&gt;∫&lt;em&gt;N&lt;/em&gt;−&lt;em&gt;N&lt;strong&gt;e&lt;/strong&gt;x&lt;/em&gt;d&lt;em&gt;x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;双重积分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\iint_{D}^{W} \, \mathrm{d}x\,\mathrm{d}y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∬&lt;em&gt;W**D&lt;/em&gt;d&lt;em&gt;x&lt;/em&gt;d&lt;em&gt;y&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;三重积分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\iiint_{E}^{V} \, \mathrm{d}x\,\mathrm{d}y\,\mathrm{d}z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∭&lt;em&gt;V**E&lt;/em&gt;d&lt;em&gt;x&lt;/em&gt;d&lt;em&gt;y&lt;/em&gt;d&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;闭合的曲线、曲面积分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\oint_{C} x^3\, \mathrm{d}x + 4y^2\, \mathrm{d}y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;∮&lt;em&gt;C**x&lt;/em&gt;3d&lt;em&gt;x&lt;/em&gt;+4&lt;em&gt;y&lt;/em&gt;2d&lt;em&gt;y&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;交集&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\bigcap_1^{n} p
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;n&lt;/em&gt;⋂1&lt;em&gt;p&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;并集&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\bigcup_1^{k} p
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;k&lt;/em&gt;⋃1&lt;em&gt;p&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;分数httpswwwcnblogscom1024thp11623258html1213133870&#34;&gt;分数&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1213133870&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;通常使用 &lt;code&gt;\frac {分子} {分母}&lt;/code&gt; 命令产生一个分数，分数可嵌套。
便捷情况可直接输入 &lt;code&gt;\frac ab&lt;/code&gt; 来快速生成一个 &lt;em&gt;a**b&lt;/em&gt; 。
如果分式很复杂，亦可使用 &lt;code&gt;分子 \over 分母&lt;/code&gt; 命令，此时分数仅有一层。&lt;/p&gt;
&lt;p&gt;功能|语法|效果&lt;/p&gt;
&lt;p&gt;分数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\frac{2}{4}=0.5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;24=0.5&lt;/p&gt;
&lt;p&gt;小型分数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\tfrac{2}{4} = 0.5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;24=0.5&lt;/p&gt;
&lt;p&gt;连分式（大型嵌套分式）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\cfrac{2}{c + \cfrac{2}{d + \cfrac{2}{4}}} = a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2&lt;em&gt;c&lt;/em&gt;+2&lt;em&gt;d&lt;/em&gt;+24=&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;大型不嵌套分式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\dfrac{2}{4} = 0.5 \qquad \dfrac{2}{c + \dfrac{2}{d + \dfrac{2}{4}}} = a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;24=0.52&lt;em&gt;c&lt;/em&gt;+2&lt;em&gt;d&lt;/em&gt;+24=&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;二项式系数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\dbinom{n}{r}=\binom{n}{n-r}=\mathrm{C}_n^r=\mathrm{C}_n^{n-r}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;em&gt;n**r&lt;/em&gt;)=(&lt;em&gt;n**n&lt;/em&gt;−&lt;em&gt;r&lt;/em&gt;)=C&lt;em&gt;r**n&lt;/em&gt;=C&lt;em&gt;n&lt;/em&gt;−&lt;em&gt;r**n&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;小型二项式系数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\tbinom{n}{r}=\tbinom{n}{n-r}=\mathrm{C}_n^r=\mathrm{C}_n^{n-r}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;em&gt;n**r&lt;/em&gt;)=(&lt;em&gt;n**n&lt;/em&gt;−&lt;em&gt;r&lt;/em&gt;)=C&lt;em&gt;r**n&lt;/em&gt;=C&lt;em&gt;n&lt;/em&gt;−&lt;em&gt;r**n&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;大型二项式系数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\binom{n}{r}=\dbinom{n}{n-r}=\mathrm{C}_n^r=\mathrm{C}_n^{n-r}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;em&gt;n**r&lt;/em&gt;)=(&lt;em&gt;n**n&lt;/em&gt;−&lt;em&gt;r&lt;/em&gt;)=C&lt;em&gt;r**n&lt;/em&gt;=C&lt;em&gt;n&lt;/em&gt;−&lt;em&gt;r**n&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在以e为底的指数函数、极限和积分中尽量不要使用 &lt;code&gt;\frac&lt;/code&gt; 符号：它会使整段函数看起来很怪，而且可能产生歧义。也正是因此它在专业数学排版中几乎从不出现。
横着写这些分式，中间使用斜线间隔 &lt;code&gt;/&lt;/code&gt; （用斜线代替分数线）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{cc}
\mathrm{Bad} &amp;amp; \mathrm{Better} \\
\hline \\
e^{i\frac{\pi}2} \quad e^{\frac{i\pi}2}&amp;amp; e^{i\pi/2} \\
\int_{-\frac\pi2}^\frac\pi2 \sin x\,dx &amp;amp; \int_{-\pi/2}^{\pi/2}\sin x\,dx \\
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BadBetter&lt;em&gt;e&lt;strong&gt;i&lt;/strong&gt;π&lt;/em&gt;2&lt;em&gt;e&lt;strong&gt;i&lt;/strong&gt;π&lt;/em&gt;2&lt;em&gt;e&lt;strong&gt;i&lt;/strong&gt;π&lt;/em&gt;/2∫&lt;em&gt;π&lt;/em&gt;2−&lt;em&gt;π&lt;/em&gt;2sin&lt;em&gt;x&lt;strong&gt;d&lt;/strong&gt;x&lt;/em&gt;∫&lt;em&gt;π&lt;/em&gt;/2−&lt;em&gt;π&lt;/em&gt;/2sin&lt;em&gt;x&lt;strong&gt;d&lt;/strong&gt;x&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;矩阵条件表达式方程组httpswwwcnblogscom1024thp11623258html796853588&#34;&gt;矩阵、条件表达式、方程组&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#796853588&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{类型}
公式内容
\end{类型}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类型可以是：矩阵 &lt;code&gt;matrix&lt;/code&gt; &lt;code&gt;pmatrix&lt;/code&gt; &lt;code&gt;bmatrix&lt;/code&gt; &lt;code&gt;Bmatrix&lt;/code&gt; &lt;code&gt;vmatrix&lt;/code&gt; &lt;code&gt;Vmatrix&lt;/code&gt;、条件表达式 &lt;code&gt;cases&lt;/code&gt;、多行对齐方程式 &lt;code&gt;aligned&lt;/code&gt;、数组 &lt;code&gt;array&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在公式内容中：在每一行中插入 &lt;code&gt;&amp;amp;&lt;/code&gt; 来指定需要&lt;strong&gt;对齐&lt;/strong&gt;的内容，在每行结尾处使用 &lt;code&gt;\\&lt;/code&gt; &lt;strong&gt;换行&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;无框矩阵httpswwwcnblogscom1024thp11623258html2637945787&#34;&gt;无框矩阵&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2637945787&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在开头使用 &lt;code&gt;begin{matrix}&lt;/code&gt;，在结尾使用 &lt;code&gt;end{matrix}&lt;/code&gt;，在中间插入矩阵元素，每个元素之间插入 &lt;code&gt;&amp;amp;&lt;/code&gt; ，并在每行结尾处使用 &lt;code&gt;\\&lt;/code&gt; 。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{matrix}
x &amp;amp; y \\
z &amp;amp; v
\end{matrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z**v&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;有框矩阵httpswwwcnblogscom1024thp11623258html227175904&#34;&gt;有框矩阵&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#227175904&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在开头将 &lt;code&gt;matrix&lt;/code&gt; 替换为 &lt;code&gt;pmatrix&lt;/code&gt; &lt;code&gt;bmatrix&lt;/code&gt; &lt;code&gt;Bmatrix&lt;/code&gt; &lt;code&gt;vmatrix&lt;/code&gt; &lt;code&gt;Vmatrix&lt;/code&gt; 。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{vmatrix}
x &amp;amp; y \\
z &amp;amp; v
\end{vmatrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;|&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z**v&lt;/em&gt;|&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{Vmatrix}
x &amp;amp; y \\
z &amp;amp; v
\end{Vmatrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;‖&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z**v&lt;/em&gt;‖&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;\cdots&lt;/code&gt; ⋯ , &lt;code&gt;\ddots&lt;/code&gt; ⋱ , &lt;code&gt;\vdots&lt;/code&gt; ⋮ 来输入&lt;strong&gt;省略符号&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{bmatrix}
0      &amp;amp; \cdots &amp;amp; 0      \\
\vdots &amp;amp; \ddots &amp;amp; \vdots \\
0      &amp;amp; \cdots &amp;amp; 0
\end{bmatrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[0⋯0⋮⋱⋮0⋯0]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{Bmatrix}
x &amp;amp; y \\
z &amp;amp; v
\end{Bmatrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z**v&lt;/em&gt;}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{pmatrix}
x &amp;amp; y \\
z &amp;amp; v
\end{pmatrix}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z**v&lt;/em&gt;)&lt;/p&gt;
&lt;h3 id=&#34;条件表达式httpswwwcnblogscom1024thp11623258html1129927696&#34;&gt;条件表达式&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1129927696&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Copyf(n) =
\begin{cases} 
n/2,  &amp;amp; \text{if }n\text{ is even} \\
3n+1, &amp;amp; \text{if }n\text{ is odd}
\end{cases}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;)={&lt;em&gt;n&lt;/em&gt;/2,if &lt;em&gt;n&lt;/em&gt; is even3&lt;em&gt;n&lt;/em&gt;+1,if &lt;em&gt;n&lt;/em&gt; is odd&lt;/p&gt;
&lt;h3 id=&#34;多行等式同余式httpswwwcnblogscom1024thp11623258html1197371655&#34;&gt;多行等式、同余式&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1197371655&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人们经常想要一列整齐且居中的方程式序列。使用 &lt;code&gt;\begin{aligned}…\end{aligned}&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{aligned}
f(x) &amp;amp; = (m+n)^2 \\
     &amp;amp; = m^2+2mn+n^2 \\
\end{aligned}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)=(&lt;em&gt;m&lt;/em&gt;+&lt;em&gt;n&lt;/em&gt;)2=&lt;em&gt;m&lt;/em&gt;2+2&lt;em&gt;m**n&lt;/em&gt;+&lt;em&gt;n&lt;/em&gt;2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copybegin{aligned}
3^{6n+3}+4^{6n+3} 
&amp;amp; \equiv (3^3)^{2n+1}+(4^3)^{2n+1}\\  
&amp;amp; \equiv 27^{2n+1}+64^{2n+1}\\  
&amp;amp; \equiv 27^{2n+1}+(-27)^{2n+1}\\ 
&amp;amp; \equiv 27^{2n+1}-27^{2n+1}\\
&amp;amp; \equiv 0 \pmod{91}\\
\end{aligned}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;36&lt;em&gt;n&lt;/em&gt;+3+46&lt;em&gt;n&lt;/em&gt;+3≡(33)2&lt;em&gt;n&lt;/em&gt;+1+(43)2&lt;em&gt;n&lt;/em&gt;+1≡272&lt;em&gt;n&lt;/em&gt;+1+642&lt;em&gt;n&lt;/em&gt;+1≡272&lt;em&gt;n&lt;/em&gt;+1+(−27)2&lt;em&gt;n&lt;/em&gt;+1≡272&lt;em&gt;n&lt;/em&gt;+1−272&lt;em&gt;n&lt;/em&gt;+1≡0(mod91)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{alignedat}{3}
f(x) &amp;amp; = (m-n)^2 \\
f(x) &amp;amp; = (-m+n)^2 \\
     &amp;amp; = m^2-2mn+n^2 \\
\end{alignedat}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)=(&lt;em&gt;m&lt;/em&gt;−&lt;em&gt;n&lt;/em&gt;)2&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)=(−&lt;em&gt;m&lt;/em&gt;+&lt;em&gt;n&lt;/em&gt;)2=&lt;em&gt;m&lt;/em&gt;2−2&lt;em&gt;m**n&lt;/em&gt;+&lt;em&gt;n&lt;/em&gt;2&lt;/p&gt;
&lt;h3 id=&#34;方程组httpswwwcnblogscom1024thp11623258html1225278542&#34;&gt;方程组&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1225278542&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{cases}
3x + 5y +  z \\
7x - 2y + 4z \\
-6x + 3y + 2z
\end{cases}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{3&lt;em&gt;x&lt;/em&gt;+5&lt;em&gt;y&lt;/em&gt;+&lt;em&gt;z&lt;/em&gt;7&lt;em&gt;x&lt;/em&gt;−2&lt;em&gt;y&lt;/em&gt;+4&lt;em&gt;z&lt;/em&gt;−6&lt;em&gt;x&lt;/em&gt;+3&lt;em&gt;y&lt;/em&gt;+2&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copy\left\{\begin{aligned}
3x + 5y +  z \\
7x - 2y + 4z \\
-6x + 3y + 2z
\end{aligned}\right.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{3&lt;em&gt;x&lt;/em&gt;+5&lt;em&gt;y&lt;/em&gt;+&lt;em&gt;z&lt;/em&gt;7&lt;em&gt;x&lt;/em&gt;−2&lt;em&gt;y&lt;/em&gt;+4&lt;em&gt;z&lt;/em&gt;−6&lt;em&gt;x&lt;/em&gt;+3&lt;em&gt;y&lt;/em&gt;+2&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;数组与表格httpswwwcnblogscom1024thp11623258html3758305427&#34;&gt;数组与表格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3758305427&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;通常，一个格式化后的表格比单纯的文字或排版后的文字更具有可读性。数组和表格均以 &lt;code&gt;\begin{array}&lt;/code&gt; 开头，并在其后定义列数及每一列的文本对齐属性，&lt;code&gt;c&lt;/code&gt; &lt;code&gt;l&lt;/code&gt; &lt;code&gt;r&lt;/code&gt; 分别代表居中、左对齐及右对齐。若需要插入垂直分割线，在定义式中插入 &lt;code&gt;|&lt;/code&gt; ，若要插入水平分割线，在下一行输入前插入 &lt;code&gt;\hline&lt;/code&gt; 。与矩阵相似，每行元素间均须要插入 &lt;code&gt;&amp;amp;&lt;/code&gt; ，每行元素以 &lt;code&gt;\\&lt;/code&gt; 结尾，最后以 &lt;code&gt;\end{array}&lt;/code&gt; 结束数组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{c|lcr}
n &amp;amp; \text{左对齐} &amp;amp; \text{居中对齐} &amp;amp; \text{右对齐} \\
\hline
1 &amp;amp; 0.24 &amp;amp; 1 &amp;amp; 125 \\
2 &amp;amp; -1 &amp;amp; 189 &amp;amp; -8 \\
3 &amp;amp; -20 &amp;amp; 2000 &amp;amp; 1+10i
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;n&lt;/em&gt;左对齐居中对齐右对齐10.2411252−1189−83−2020001+10&lt;em&gt;i&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{lcl}
z        &amp;amp; = &amp;amp; a \\
f(x,y,z) &amp;amp; = &amp;amp; x + y + z 
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;z&lt;/em&gt;=&lt;em&gt;a**f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;,&lt;em&gt;z&lt;/em&gt;)=&lt;em&gt;x&lt;/em&gt;+&lt;em&gt;y&lt;/em&gt;+&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{lcr}
z        &amp;amp; = &amp;amp; a \\
f(x,y,z) &amp;amp; = &amp;amp; x + y + z    
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;z&lt;/em&gt;=&lt;em&gt;a**f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;,&lt;em&gt;z&lt;/em&gt;)=&lt;em&gt;x&lt;/em&gt;+&lt;em&gt;y&lt;/em&gt;+&lt;em&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{ccc}
a &amp;amp; b &amp;amp; S \\
\hline
0&amp;amp;0&amp;amp;1\\
0&amp;amp;1&amp;amp;1\\
1&amp;amp;0&amp;amp;1\\
1&amp;amp;1&amp;amp;0\\
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;a&lt;strong&gt;b&lt;/strong&gt;S&lt;/em&gt;001011101110&lt;/p&gt;
&lt;h3 id=&#34;嵌套数组或表格httpswwwcnblogscom1024thp11623258html251922513&#34;&gt;嵌套数组或表格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#251922513&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多个数组/表格可 &lt;strong&gt;互相嵌套&lt;/strong&gt; 并组成一组数组/一组表格。
使用嵌套前必须声明 &lt;code&gt;$$&lt;/code&gt; 符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy% outer vertical array of arrays 外层垂直表格
\begin{array}{c}
    % inner horizontal array of arrays 内层水平表格
    \begin{array}{cc}
        % inner array of minimum values 内层&amp;quot;最小值&amp;quot;数组
        \begin{array}{c|cccc}
        \text{min} &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3\\
        \hline
        0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\\
        1 &amp;amp; 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1\\
        2 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 2\\
        3 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3
        \end{array}
    &amp;amp;
        % inner array of maximum values 内层&amp;quot;最大值&amp;quot;数组
        \begin{array}{c|cccc}
        \text{max}&amp;amp;0&amp;amp;1&amp;amp;2&amp;amp;3\\
        \hline
        0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3\\
        1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3\\
        2 &amp;amp; 2 &amp;amp; 2 &amp;amp; 2 &amp;amp; 3\\
        3 &amp;amp; 3 &amp;amp; 3 &amp;amp; 3 &amp;amp; 3
        \end{array}
    \end{array}
    % 内层第一行表格组结束
    \\
    % inner array of delta values 内层第二行Delta值数组
        \begin{array}{c|cccc}
        \Delta&amp;amp;0&amp;amp;1&amp;amp;2&amp;amp;3\\
        \hline
        0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3\\
        1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2\\
        2 &amp;amp; 2 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\
        3 &amp;amp; 3 &amp;amp; 2 &amp;amp; 1 &amp;amp; 0
        \end{array}
        % 内层第二行表格组结束
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;min012300000101112012230123max012300123111232222333333Δ012300123110122210133210&lt;/p&gt;
&lt;h3 id=&#34;用数组实现带分割符号的矩阵httpswwwcnblogscom1024thp11623258html2421118948&#34;&gt;用数组实现带分割符号的矩阵&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2421118948&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy$$
\left[
    \begin{array}{cc|c}
      1&amp;amp;2&amp;amp;3\\
      4&amp;amp;5&amp;amp;6
    \end{array}
\right]
$$
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[123456]&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;cc|c&lt;/code&gt; 代表在一个三列矩阵中的第二和第三列之间插入分割线。&lt;/p&gt;
&lt;h2 id=&#34;字体httpswwwcnblogscom1024thp11623258html3415067676&#34;&gt;字体&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3415067676&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;希腊字母httpswwwcnblogscom1024thp11623258html1729233271&#34;&gt;希腊字母&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1729233271&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;输入 &lt;code&gt;\小写希腊字母英文全称&lt;/code&gt; 和 &lt;code&gt;\首字母大写希腊字母英文全称&lt;/code&gt; 来分别输入小写和大写希腊字母。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Alpha \Beta \Gamma \Delta \Epsilon \Zeta \Eta \Theta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABΓΔEZHΘ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Iota \Kappa \Lambda \Mu \Nu \Xi \Omicron \Pi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IKΛMNOΞΠ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\Rho \Sigma \Tau \Upsilon \Phi \Chi \Psi \Omega
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PΣTΥΦXΨΩ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\alpha \beta \gamma \delta \epsilon \zeta \eta \theta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α&lt;strong&gt;β&lt;/strong&gt;γ&lt;strong&gt;δ&lt;/strong&gt;ϵ&lt;strong&gt;ζ&lt;/strong&gt;η**θ&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\iota \kappa \lambda \mu \nu \omicron \xi \pi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;ι&lt;strong&gt;κ&lt;/strong&gt;λ&lt;strong&gt;μ&lt;/strong&gt;ν&lt;/em&gt;o&lt;em&gt;ξ**π&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\rho \sigma \tau \upsilon \phi \chi \psi \omega
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;ρ&lt;strong&gt;σ&lt;/strong&gt;τ&lt;strong&gt;υ&lt;/strong&gt;ϕ&lt;strong&gt;χ&lt;/strong&gt;ψ**ω&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部分字母有变量专用形式，以 &lt;code&gt;\var-&lt;/code&gt; 开头。&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\varepsilon \digamma \varkappa \varpi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;ε&lt;strong&gt;ϝ&lt;/strong&gt;ϰ**ϖ&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\varrho \varsigma \vartheta \varphi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;ϱ&lt;strong&gt;ς&lt;/strong&gt;ϑ**φ&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;希伯来符号httpswwwcnblogscom1024thp11623258html497137919&#34;&gt;希伯来符号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#497137919&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\aleph \beth \gimel \daleth
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ℵ&lt;em&gt;ℶ&lt;strong&gt;ℷ&lt;/strong&gt;ℸ&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;部分字体的简称httpswwwcnblogscom1024thp11623258html1305250798&#34;&gt;部分字体的简称&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#1305250798&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;若要对公式的某一部分字符进行字体转换，可以用 &lt;code&gt;{\字体 {需转换的部分字符}}&lt;/code&gt; 命令，其中 &lt;code&gt;\字体&lt;/code&gt; 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体 &lt;em&gt;i&lt;strong&gt;t&lt;/strong&gt;a&lt;strong&gt;l&lt;/strong&gt;i**c&lt;/em&gt; 。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;输入&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;显示&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;输入&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\rm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;罗马体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Sample&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\cal&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;花体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;SAMPLE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\it&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;意大利体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Sample&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\Bbb&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;黑板粗体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;SAMPLE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\bf&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;粗体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;S&lt;strong&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/strong&gt;m&lt;strong&gt;&lt;strong&gt;p&lt;/strong&gt;&lt;/strong&gt;l****e&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\mit&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数学斜体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;S&lt;strong&gt;A&lt;/strong&gt;M&lt;strong&gt;P&lt;/strong&gt;L**E&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\sf&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;等线体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Sample&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\scr&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;手写体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;SAMPLE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\tt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;打字机体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Sample&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\frak&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;旧德式字体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Sample&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;所有字体httpswwwcnblogscom1024thp11623258html2691648323&#34;&gt;所有字体&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2691648323&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;黑板报粗体&#34;&gt;黑板报粗体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathbb{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABCDEFGHI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbb{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JKLMNOPQR&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbb{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;STUVWXYZ&lt;/p&gt;
&lt;h4 id=&#34;粗体&#34;&gt;粗体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;strong&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/strong&gt;C&lt;strong&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/strong&gt;E&lt;strong&gt;&lt;strong&gt;F&lt;/strong&gt;&lt;/strong&gt;G&lt;strong&gt;&lt;strong&gt;H&lt;/strong&gt;&lt;/strong&gt;I&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;J&lt;strong&gt;&lt;strong&gt;K&lt;/strong&gt;&lt;/strong&gt;L&lt;strong&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/strong&gt;N&lt;strong&gt;&lt;strong&gt;O&lt;/strong&gt;&lt;/strong&gt;P&lt;strong&gt;&lt;strong&gt;Q&lt;/strong&gt;&lt;/strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;S&lt;strong&gt;&lt;strong&gt;T&lt;/strong&gt;&lt;/strong&gt;U&lt;strong&gt;&lt;strong&gt;V&lt;/strong&gt;&lt;/strong&gt;W&lt;strong&gt;&lt;strong&gt;X&lt;/strong&gt;&lt;/strong&gt;Y****Z&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{abcdefghijklm}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;a&lt;strong&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/strong&gt;c&lt;strong&gt;&lt;strong&gt;d&lt;/strong&gt;&lt;/strong&gt;e&lt;strong&gt;&lt;strong&gt;f&lt;/strong&gt;&lt;/strong&gt;g&lt;strong&gt;&lt;strong&gt;h&lt;/strong&gt;&lt;/strong&gt;i&lt;strong&gt;&lt;strong&gt;j&lt;/strong&gt;&lt;/strong&gt;k&lt;strong&gt;&lt;strong&gt;l&lt;/strong&gt;&lt;/strong&gt;m&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{nopqrstuvwxyz}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;n&lt;strong&gt;&lt;strong&gt;o&lt;/strong&gt;&lt;/strong&gt;p&lt;strong&gt;&lt;strong&gt;q&lt;/strong&gt;&lt;/strong&gt;r&lt;strong&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/strong&gt;t&lt;strong&gt;&lt;strong&gt;u&lt;/strong&gt;&lt;/strong&gt;v&lt;strong&gt;&lt;strong&gt;w&lt;/strong&gt;&lt;/strong&gt;x&lt;strong&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/strong&gt;z&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathbf{0123456789}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;0123456789&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;粗体希腊字母&#34;&gt;粗体希腊字母&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\Alpha\Beta\Gamma\Delta\Epsilon\Zeta\Eta\Theta}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;strong&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/strong&gt;Γ&lt;strong&gt;&lt;strong&gt;Δ&lt;/strong&gt;&lt;/strong&gt;E&lt;strong&gt;&lt;strong&gt;Z&lt;/strong&gt;&lt;/strong&gt;H****Θ&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\Iota\Kappa\Lambda\Mu\Nu\Xi\Pi\Rho}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;I&lt;strong&gt;&lt;strong&gt;K&lt;/strong&gt;&lt;/strong&gt;Λ&lt;strong&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/strong&gt;N&lt;strong&gt;&lt;strong&gt;Ξ&lt;/strong&gt;&lt;/strong&gt;Π****P&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\Sigma\Tau\Upsilon\Phi\Chi\Psi\Omega}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Σ&lt;strong&gt;&lt;strong&gt;T&lt;/strong&gt;&lt;/strong&gt;Υ&lt;strong&gt;&lt;strong&gt;Φ&lt;/strong&gt;&lt;/strong&gt;X&lt;strong&gt;&lt;strong&gt;Ψ&lt;/strong&gt;&lt;/strong&gt;Ω&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\alpha\beta\gamma\delta\epsilon\zeta\eta\theta}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;α&lt;strong&gt;&lt;strong&gt;β&lt;/strong&gt;&lt;/strong&gt;γ&lt;strong&gt;&lt;strong&gt;δ&lt;/strong&gt;&lt;/strong&gt;ϵ&lt;strong&gt;&lt;strong&gt;ζ&lt;/strong&gt;&lt;/strong&gt;η****θ&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\iota\kappa\lambda\mu\nu\xi\pi\rho}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;ι&lt;strong&gt;&lt;strong&gt;κ&lt;/strong&gt;&lt;/strong&gt;λ&lt;strong&gt;&lt;strong&gt;μ&lt;/strong&gt;&lt;/strong&gt;ν&lt;strong&gt;&lt;strong&gt;ξ&lt;/strong&gt;&lt;/strong&gt;π****ρ&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\sigma\tau\upsilon\phi\chi\psi\omega}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;σ&lt;strong&gt;&lt;strong&gt;τ&lt;/strong&gt;&lt;/strong&gt;υ&lt;strong&gt;&lt;strong&gt;ϕ&lt;/strong&gt;&lt;/strong&gt;χ&lt;strong&gt;&lt;strong&gt;ψ&lt;/strong&gt;&lt;/strong&gt;ω&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\varepsilon\digamma\varkappa\varpi}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;ε&lt;strong&gt;&lt;strong&gt;ϝ&lt;/strong&gt;&lt;/strong&gt;ϰ****ϖ&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\boldsymbol{\varrho\varsigma\vartheta\varphi}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;ϱ&lt;strong&gt;&lt;strong&gt;ς&lt;/strong&gt;&lt;/strong&gt;ϑ****φ&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;斜体拉丁字母默认&#34;&gt;斜体（拉丁字母默认）&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathit{0123456789}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;0123456789&lt;/p&gt;
&lt;h4 id=&#34;斜体希腊字母小写字母默认&#34;&gt;斜体希腊字母（小写字母默认）&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathit{\Alpha\Beta\Gamma\Delta\Epsilon\Zeta\Eta\Theta}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABΓΔEZHΘ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathit{\Iota\Kappa\Lambda\Mu\Nu\Xi\Pi\Rho}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IKΛMNΞΠP&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathit{\Sigma\Tau\Upsilon\Phi\Chi\Psi\Omega}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ΣTΥΦXΨΩ&lt;/p&gt;
&lt;h4 id=&#34;罗马体&#34;&gt;罗马体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABCDEFGHI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JKLMNOPQR&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;STUVWXYZ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{abcdefghijklm}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;abcdefghijklm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{nopqrstuvwxyz}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nopqrstuvwxyz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathrm{0123456789}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;0123456789&lt;/p&gt;
&lt;h4 id=&#34;无衬线体&#34;&gt;无衬线体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABCDEFGHI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JKLMNOPQR&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;STUVWXYZ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{abcdefghijklm}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;abcdefghijklm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{nopqrstuvwxyz}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nopqrstuvwxyz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{0123456789}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;0123456789&lt;/p&gt;
&lt;h4 id=&#34;无衬线体希腊字母仅大写&#34;&gt;无衬线体希腊字母（仅大写）&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{\Alpha \Beta \Gamma \Delta \Epsilon \Zeta \Eta \Theta}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABΓΔEZHΘ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{\Iota \Kappa \Lambda \Mu \Nu \Xi \Pi \Rho}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IKΛMNΞΠP&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathsf{\Sigma \Tau \Upsilon \Phi \Chi \Psi \Omega}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ΣTΥΦXΨΩ&lt;/p&gt;
&lt;h4 id=&#34;手写体--花体&#34;&gt;手写体 / 花体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathcal{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABCDEFGHI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathcal{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JKLMNOPQR&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathcal{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;STUVWXYZ&lt;/p&gt;
&lt;h4 id=&#34;fraktur-体&#34;&gt;Fraktur 体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{ABCDEFGHI}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ABCDEFGHI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{JKLMNOPQR}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JKLMNOPQR&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{STUVWXYZ}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;STUVWXYZ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{abcdefghijklm}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;abcdefghijklm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{nopqrstuvwxyz}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nopqrstuvwxyz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\mathfrak{0123456789}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;0123456789&lt;/p&gt;
&lt;h4 id=&#34;小型手写体&#34;&gt;小型手写体&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;{\scriptstyle\text{abcdefghijklm}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;abcdefghijklm&lt;/p&gt;
&lt;h3 id=&#34;混合字体httpswwwcnblogscom1024thp11623258html3541571100&#34;&gt;混合字体&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3541571100&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;特征|语法|渲染效果&lt;/p&gt;
&lt;p&gt;斜体字符（忽略空格）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x y z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;x&lt;strong&gt;y&lt;/strong&gt;z&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;非斜体字符&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\text{x y z}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;x y z&lt;/p&gt;
&lt;p&gt;混合斜体（差）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\text{if} n \text{is even}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;if&lt;em&gt;n&lt;/em&gt;is even&lt;/p&gt;
&lt;p&gt;混合斜体（好）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\text{if }n\text{ is even}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;if &lt;em&gt;n&lt;/em&gt; is even&lt;/p&gt;
&lt;p&gt;混合斜体（替代品：&lt;code&gt;~&lt;/code&gt; 或者 &lt;code&gt;\&lt;/code&gt; 强制空格）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\text{if}~n\ \text{is even}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;if &lt;em&gt;n&lt;/em&gt; is even&lt;/p&gt;
&lt;h3 id=&#34;注释文本httpswwwcnblogscom1024thp11623258html3127066326&#34;&gt;注释文本&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3127066326&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;\text {文字}&lt;/code&gt; 来添加注释文本（注释文本不会被识别为公式，不用斜体显示）。&lt;code&gt;\text {文字}&lt;/code&gt;中仍可以使用 &lt;code&gt;$公式$&lt;/code&gt; 插入其它公式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copyf(n)= \begin{cases}
n/2, &amp;amp; \text {if $n$ is even} \\
3n+1, &amp;amp;\text{if $n$ is odd}
\end{cases} 
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;)={&lt;em&gt;n&lt;/em&gt;/2,if &lt;em&gt;n&lt;/em&gt; is even3&lt;em&gt;n&lt;/em&gt;+1,if &lt;em&gt;n&lt;/em&gt; is odd&lt;/p&gt;
&lt;h2 id=&#34;括号httpswwwcnblogscom1024thp11623258html254759006&#34;&gt;括号&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#254759006&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;()&lt;/code&gt;、&lt;code&gt;[]&lt;/code&gt; 和 &lt;code&gt;|&lt;/code&gt; 表示符号本身，使用 &lt;code&gt;\{\}&lt;/code&gt; 来表示 &lt;code&gt;{}&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;功能|语法|显示&lt;/p&gt;
&lt;p&gt;短括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\frac{1}{2}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(12)&lt;/p&gt;
&lt;p&gt;长括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left(\frac{1}{2} \right)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(12)&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;\left&lt;/code&gt; 和 &lt;code&gt;\right&lt;/code&gt; 来创建自动匹配高度的 (圆括号)，[方括号] 和 {花括号} 。&lt;/p&gt;
&lt;p&gt;功能|语法|显示&lt;/p&gt;
&lt;p&gt;圆括号，小括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left( \frac{a}{b} \right)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;em&gt;a**b&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;方括号，中括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left[ \frac{a}{b} \right]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[&lt;em&gt;a**b&lt;/em&gt;]&lt;/p&gt;
&lt;p&gt;花括号，大括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left{ \frac{a}{b} \right}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{&lt;em&gt;a**b&lt;/em&gt;}&lt;/p&gt;
&lt;p&gt;角括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \langle \frac{a}{b} \right \rangle
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⟨&lt;em&gt;a**b&lt;/em&gt;⟩&lt;/p&gt;
&lt;p&gt;单竖线，绝对值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left| \frac{a}{b} \right|
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;|&lt;em&gt;a**b&lt;/em&gt;|&lt;/p&gt;
&lt;p&gt;双竖线，范&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \| \frac{a}{b} \right \|
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;‖&lt;em&gt;a**b&lt;/em&gt;‖&lt;/p&gt;
&lt;p&gt;取整函数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \lfloor \frac{a}{b} \right \rfloor
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⌊&lt;em&gt;a**b&lt;/em&gt;⌋&lt;/p&gt;
&lt;p&gt;取顶函数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \lceil \frac{c}{d} \right \rceil
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⌈&lt;em&gt;c**d&lt;/em&gt;⌉&lt;/p&gt;
&lt;p&gt;斜线与反斜线&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left / \frac{a}{b} \right \backslash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/&lt;em&gt;a**b&lt;/em&gt;\&lt;/p&gt;
&lt;p&gt;上下箭头&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \uparrow \frac{a}{b} \right \downarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↑&lt;em&gt;a**b&lt;/em&gt;↓&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \Uparrow \frac{a}{b} \right \Downarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⇑&lt;em&gt;a**b&lt;/em&gt;⇓&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \updownarrow \frac{a}{b} \right \Updownarrow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↕&lt;em&gt;a**b&lt;/em&gt;⇕&lt;/p&gt;
&lt;p&gt;混合括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left[ 0,1 \right)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[0,1)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \langle \psi \right |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;⟨&lt;em&gt;ψ&lt;/em&gt;|&lt;/p&gt;
&lt;p&gt;如果括号只有一边，要用 &lt;code&gt;\left.&lt;/code&gt; 或 &lt;code&gt;\right.&lt;/code&gt; 匹配另一边。&lt;/p&gt;
&lt;p&gt;单左括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left \{\frac{a}{b} \right.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{&lt;em&gt;a**b&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;单右括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\left. \frac{a}{b} \right \}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;a**b&lt;/em&gt;}&lt;/p&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以使用 &lt;code&gt;\big, \Big, \bigg, \Bigg&lt;/code&gt; 控制括号的大小，比如代码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\Bigg ( \bigg [ \Big \{ \big \langle \left | \| \frac{a}{b} \| \right | \big \rangle \Big \} \bigg ] \Bigg )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示︰&lt;/p&gt;
&lt;p&gt;([{⟨|‖&lt;em&gt;a**b&lt;/em&gt;‖|⟩}])&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;空格httpswwwcnblogscom1024thp11623258html798103982&#34;&gt;空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#798103982&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;注意 TeX 能够自动处理大多数的空格，但是您有时候需要自己来控制。&lt;/p&gt;
&lt;p&gt;功能|语法|显示|宽度&lt;/p&gt;
&lt;h3 id=&#34;2-个-quad-空格httpswwwcnblogscom1024thp11623258html3284851836&#34;&gt;2 个 quad 空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3284851836&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\qquad\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;m**m&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;quad-空格httpswwwcnblogscom1024thp11623258html2708687975&#34;&gt;quad 空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2708687975&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\quad\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;m&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;大空格httpswwwcnblogscom1024thp11623258html4289978488&#34;&gt;大空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#4289978488&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\ \beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α&lt;/em&gt; &lt;em&gt;β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;m&lt;/em&gt;3&lt;/p&gt;
&lt;h3 id=&#34;中等空格httpswwwcnblogscom1024thp11623258html2621434100&#34;&gt;中等空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2621434100&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\;\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;2&lt;em&gt;m&lt;/em&gt;7&lt;/p&gt;
&lt;h3 id=&#34;小空格httpswwwcnblogscom1024thp11623258html3968063521&#34;&gt;小空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3968063521&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\,\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;m&lt;/em&gt;6&lt;/p&gt;
&lt;h3 id=&#34;没有空格httpswwwcnblogscom1024thp11623258html2752521305&#34;&gt;没有空格&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2752521305&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;0&lt;/p&gt;
&lt;h3 id=&#34;紧贴httpswwwcnblogscom1024thp11623258html2672651776&#34;&gt;紧贴&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#2672651776&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;\alpha\!\beta
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;α**β&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;−&lt;em&gt;m&lt;/em&gt;6&lt;/p&gt;
&lt;h2 id=&#34;颜色httpswwwcnblogscom1024thp11623258html4154073319&#34;&gt;颜色&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#4154073319&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;cmd-markdown-公式指导手册httpswwwzybuluocomcodeepnote163962七交换图表使用参考里是这样写的httpswwwcnblogscom1024thp11623258html3095302976&#34;&gt;&lt;a href=&#34;https://www.zybuluo.com/codeep/note/163962#%E4%B8%83%E4%BA%A4%E6%8D%A2%E5%9B%BE%E8%A1%A8%E4%BD%BF%E7%94%A8%E5%8F%82%E8%80%83&#34;&gt;Cmd Markdown 公式指导手册&lt;/a&gt;里是这样写的：&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3095302976&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;\color{颜色}{文字}&lt;/code&gt; 来更改特定的文字颜色。
更改文字颜色 &lt;strong&gt;需要浏览器支持&lt;/strong&gt; ，如果浏览器不知道你所需的颜色，那么文字将被渲染为黑色。&lt;/p&gt;
&lt;p&gt;对于较旧的浏览器（HTML4与CSS2），以下颜色是被支持的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;输入&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;显示&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;输入&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;black&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;grey&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;silver&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;white&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;maroon&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;red&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;yellow&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;lime&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;olive&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;green&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;teal&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;auqa&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;blue&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;navy&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;purple&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;fuchsia&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于较新的浏览器（HTML5与CSS3），额外的124种颜色将被支持：&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;\color {#rgb} {text}&lt;/code&gt; 来自定义更多的颜色，其中 &lt;code&gt;#rgb&lt;/code&gt; 的 &lt;code&gt;r&lt;/code&gt; &lt;code&gt;g&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; 可输入 &lt;code&gt;0-9&lt;/code&gt; 和 &lt;code&gt;a-f&lt;/code&gt; 来表示红色、绿色和蓝色的纯度（饱和度）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{|rrrrrrrr|}\hline
\verb+#000+ &amp;amp; \color{#000}{text} &amp;amp; &amp;amp; &amp;amp;
\verb+#00F+ &amp;amp; \color{#00F}{text} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; \verb+#0F0+ &amp;amp; \color{#0F0}{text} &amp;amp;
&amp;amp; &amp;amp; \verb+#0FF+ &amp;amp; \color{#0FF}{text}\\
\verb+#F00+ &amp;amp; \color{#F00}{text} &amp;amp; &amp;amp; &amp;amp;
\verb+#F0F+ &amp;amp; \color{#F0F}{text} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; \verb+#FF0+ &amp;amp; \color{#FF0}{text} &amp;amp;
&amp;amp; &amp;amp; \verb+#FFF+ &amp;amp; \color{#FFF}{text}\\
\hline
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#000&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#00F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0F0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0FF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F00&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F0F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FF0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FFF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Copy\begin{array}{|rrrrrrrr|}
\hline
\verb+#000+ &amp;amp; \color{#000}{text} &amp;amp; \verb+#005+ &amp;amp; \color{#005}{text} &amp;amp; \verb+#00A+ &amp;amp; \color{#00A}{text} &amp;amp; \verb+#00F+ &amp;amp; \color{#00F}{text}  \\
\verb+#500+ &amp;amp; \color{#500}{text} &amp;amp; \verb+#505+ &amp;amp; \color{#505}{text} &amp;amp; \verb+#50A+ &amp;amp; \color{#50A}{text} &amp;amp; \verb+#50F+ &amp;amp; \color{#50F}{text}  \\
\verb+#A00+ &amp;amp; \color{#A00}{text} &amp;amp; \verb+#A05+ &amp;amp; \color{#A05}{text} &amp;amp; \verb+#A0A+ &amp;amp; \color{#A0A}{text} &amp;amp; \verb+#A0F+ &amp;amp; \color{#A0F}{text}  \\
\verb+#F00+ &amp;amp; \color{#F00}{text} &amp;amp; \verb+#F05+ &amp;amp; \color{#F05}{text} &amp;amp; \verb+#F0A+ &amp;amp; \color{#F0A}{text} &amp;amp; \verb+#F0F+ &amp;amp; \color{#F0F}{text}  \\
\hline
\verb+#080+ &amp;amp; \color{#080}{text} &amp;amp; \verb+#085+ &amp;amp; \color{#085}{text} &amp;amp; \verb+#08A+ &amp;amp; \color{#08A}{text} &amp;amp; \verb+#08F+ &amp;amp; \color{#08F}{text}  \\
\verb+#580+ &amp;amp; \color{#580}{text} &amp;amp; \verb+#585+ &amp;amp; \color{#585}{text} &amp;amp; \verb+#58A+ &amp;amp; \color{#58A}{text} &amp;amp; \verb+#58F+ &amp;amp; \color{#58F}{text}  \\
\verb+#A80+ &amp;amp; \color{#A80}{text} &amp;amp; \verb+#A85+ &amp;amp; \color{#A85}{text} &amp;amp; \verb+#A8A+ &amp;amp; \color{#A8A}{text} &amp;amp; \verb+#A8F+ &amp;amp; \color{#A8F}{text}  \\
\verb+#F80+ &amp;amp; \color{#F80}{text} &amp;amp; \verb+#F85+ &amp;amp; \color{#F85}{text} &amp;amp; \verb+#F8A+ &amp;amp; \color{#F8A}{text} &amp;amp; \verb+#F8F+ &amp;amp; \color{#F8F}{text}  \\
\hline
\verb+#0F0+ &amp;amp; \color{#0F0}{text} &amp;amp; \verb+#0F5+ &amp;amp; \color{#0F5}{text} &amp;amp; \verb+#0FA+ &amp;amp; \color{#0FA}{text} &amp;amp; \verb+#0FF+ &amp;amp; \color{#0FF}{text}  \\
\verb+#5F0+ &amp;amp; \color{#5F0}{text} &amp;amp; \verb+#5F5+ &amp;amp; \color{#5F5}{text} &amp;amp; \verb+#5FA+ &amp;amp; \color{#5FA}{text} &amp;amp; \verb+#5FF+ &amp;amp; \color{#5FF}{text}  \\
\verb+#AF0+ &amp;amp; \color{#AF0}{text} &amp;amp; \verb+#AF5+ &amp;amp; \color{#AF5}{text} &amp;amp; \verb+#AFA+ &amp;amp; \color{#AFA}{text} &amp;amp; \verb+#AFF+ &amp;amp; \color{#AFF}{text}  \\
\verb+#FF0+ &amp;amp; \color{#FF0}{text} &amp;amp; \verb+#FF5+ &amp;amp; \color{#FF5}{text} &amp;amp; \verb+#FFA+ &amp;amp; \color{#FFA}{text} &amp;amp; \verb+#FFF+ &amp;amp; \color{#FFF}{text}  \\
\hline
\end{array}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#000&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#005&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#00A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#00F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#500&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#505&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#50A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#50F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A00&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A05&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A0A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A0F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F00&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F05&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F0A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F0F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#080&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#085&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#08A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#08F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#580&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#585&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#58A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#58F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A80&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A85&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A8A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#A8F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F80&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F85&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F8A&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#F8F&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0F0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0F5&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0FA&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#0FF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#5F0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#5F5&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#5FA&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#5FF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#AF0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#AF5&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#AFA&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#AFF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FF0&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FF5&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FFA&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;#FFF&lt;em&gt;t&lt;strong&gt;e&lt;/strong&gt;x**t&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;维基百科的数学公式教程httpszhwikipediaorgwikihelp数学公式里是这样写的httpswwwcnblogscom1024thp11623258html291443034&#34;&gt;维基百科的&lt;a href=&#34;https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F&#34;&gt;数学公式教程&lt;/a&gt;里是这样写的：&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#291443034&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;语法：&lt;code&gt;{\color{颜色}表达式}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者实测：在部分浏览器中，上面的语法可能是错误的&lt;/strong&gt;（只将表达式的第一个字符着色），&lt;code&gt;\color{颜色}{文字}&lt;/code&gt;的语法才是正确的。例如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{\color{Red}abc}&lt;/code&gt;显示&lt;em&gt;a&lt;strong&gt;b&lt;/strong&gt;c&lt;/em&gt;
&lt;code&gt;\color{Red}{abc}&lt;/code&gt;显示&lt;em&gt;a&lt;strong&gt;b&lt;/strong&gt;c&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;支持色调表：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apricot&lt;/p&gt;
&lt;p&gt;Aquamarine&lt;/p&gt;
&lt;p&gt;Bittersweet&lt;/p&gt;
&lt;p&gt;Black&lt;/p&gt;
&lt;p&gt;Blue&lt;/p&gt;
&lt;p&gt;BlueGreen&lt;/p&gt;
&lt;p&gt;BlueViolet&lt;/p&gt;
&lt;p&gt;BrickRed&lt;/p&gt;
&lt;p&gt;Brown&lt;/p&gt;
&lt;p&gt;BurntOrange&lt;/p&gt;
&lt;p&gt;CadetBlue&lt;/p&gt;
&lt;p&gt;CarnationPink&lt;/p&gt;
&lt;p&gt;Cerulean&lt;/p&gt;
&lt;p&gt;CornflowerBlue&lt;/p&gt;
&lt;p&gt;Cyan&lt;/p&gt;
&lt;p&gt;Dandelion&lt;/p&gt;
&lt;p&gt;DarkOrchid&lt;/p&gt;
&lt;p&gt;Emerald&lt;/p&gt;
&lt;p&gt;ForestGreen&lt;/p&gt;
&lt;p&gt;Fuchsia&lt;/p&gt;
&lt;p&gt;Goldenrod&lt;/p&gt;
&lt;p&gt;Gray&lt;/p&gt;
&lt;p&gt;Green&lt;/p&gt;
&lt;p&gt;GreenYellow&lt;/p&gt;
&lt;p&gt;JungleGreen&lt;/p&gt;
&lt;p&gt;Lavender&lt;/p&gt;
&lt;p&gt;LimeGreen&lt;/p&gt;
&lt;p&gt;Magenta&lt;/p&gt;
&lt;p&gt;Mahogany&lt;/p&gt;
&lt;p&gt;Maroon&lt;/p&gt;
&lt;p&gt;Melon&lt;/p&gt;
&lt;p&gt;MidnightBlue&lt;/p&gt;
&lt;p&gt;Mulberry&lt;/p&gt;
&lt;p&gt;NavyBlue&lt;/p&gt;
&lt;p&gt;OliveGreen&lt;/p&gt;
&lt;p&gt;Orange&lt;/p&gt;
&lt;p&gt;OrangeRed&lt;/p&gt;
&lt;p&gt;Orchid&lt;/p&gt;
&lt;p&gt;Peach&lt;/p&gt;
&lt;p&gt;Periwinkle&lt;/p&gt;
&lt;p&gt;PineGreen&lt;/p&gt;
&lt;p&gt;Plum&lt;/p&gt;
&lt;p&gt;ProcessBlue&lt;/p&gt;
&lt;p&gt;Purple&lt;/p&gt;
&lt;p&gt;RawSienna&lt;/p&gt;
&lt;p&gt;Red&lt;/p&gt;
&lt;p&gt;RedOrange&lt;/p&gt;
&lt;p&gt;RedViolet&lt;/p&gt;
&lt;p&gt;Rhodamine&lt;/p&gt;
&lt;p&gt;RoyalBlue&lt;/p&gt;
&lt;p&gt;RoyalPurple&lt;/p&gt;
&lt;p&gt;RubineRed&lt;/p&gt;
&lt;p&gt;Salmon&lt;/p&gt;
&lt;p&gt;SeaGreen&lt;/p&gt;
&lt;p&gt;Sepia&lt;/p&gt;
&lt;p&gt;SkyBlue&lt;/p&gt;
&lt;p&gt;SpringGreen&lt;/p&gt;
&lt;p&gt;Tan&lt;/p&gt;
&lt;p&gt;TealBlue&lt;/p&gt;
&lt;p&gt;Thistle&lt;/p&gt;
&lt;p&gt;Turquoise&lt;/p&gt;
&lt;p&gt;Violet&lt;/p&gt;
&lt;p&gt;VioletRed&lt;/p&gt;
&lt;p&gt;White&lt;/p&gt;
&lt;p&gt;WildStrawberry&lt;/p&gt;
&lt;p&gt;Yellow&lt;/p&gt;
&lt;p&gt;YellowGreen&lt;/p&gt;
&lt;p&gt;YellowOrange&lt;/p&gt;
&lt;p&gt;＊注︰输入时第一个字母必需以大写输入，如&lt;code&gt;\color{OliveGreen}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{\color{Blue}x^2}+{\color{Brown}2x} - {\color{OliveGreen}1}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;x&lt;/em&gt;2+2&lt;em&gt;x&lt;/em&gt;−1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;x_{\color{Maroon}1,2}=\frac{-b\pm\sqrt{{\color{Maroon}b^2-4ac}}}{2a}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;x&lt;/em&gt;1,2=−&lt;em&gt;b&lt;/em&gt;±√&lt;em&gt;b&lt;/em&gt;2−4&lt;em&gt;a**c&lt;/em&gt;2&lt;em&gt;a&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;外部链接httpswwwcnblogscom1024thp11623258html3943757948&#34;&gt;外部链接&lt;a href=&#34;https://www.cnblogs.com/1024th/p/11623258.html#3943757948&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一个介绍 &lt;em&gt;T&lt;strong&gt;E&lt;/strong&gt;X&lt;/em&gt; 的 PDF 文档（英文）： &lt;a href=&#34;http://www.ctan.org/tex-archive/info/gentle/gentle.pdf&#34;&gt;http://www.ctan.org/tex-archive/info/gentle/gentle.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;手画符号搜索 &lt;em&gt;L&lt;strong&gt;A&lt;/strong&gt;T&lt;strong&gt;E&lt;/strong&gt;X&lt;/em&gt; 代码: &lt;a href=&#34;http://detexify.kirelabs.org/classify.html&#34;&gt;http://detexify.kirelabs.org/classify.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codecogs.com/latex/eqneditor.php&#34;&gt;LaTeX 在线编辑器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ams.org/tex/amslatex.html&#34;&gt;AMS-LaTeX 指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如未声明转载，本文作者为 1024th（https://www.cnblogs.com/1024th/p/11623258.html）&lt;/p&gt;
&lt;p&gt;版权：原创文章采用「 &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;署名-非商业性使用-相同方式共享 4.0 国际&lt;/a&gt;」协议进行许可，转载文章另行声明许可证。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;署名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;您必须在显著位置注明原作者及出处，&lt;/p&gt;
&lt;p&gt;同时标明是否作了修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;非商业性使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;您不得将本作品用于商业目的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;相同方式共享&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您基于本作品进行创作，&lt;/p&gt;
&lt;p&gt;必须使用与本文相同的许可协议。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;这是一个非常好用的框架 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;这是啥，你猜呀 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/poj_2431/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/poj_2431/</guid>
      <description>&lt;h1 id=&#34;poj-2431题解&#34;&gt;POJ 2431题解&lt;/h1&gt;
&lt;p&gt;问题链接：&lt;a href=&#34;http://poj.org/problem?id=2431&#34;&gt;POJ 2431&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题描述：&lt;/p&gt;
&lt;p&gt;一辆卡车需要经过L单位到达目的地，每单位路程耗1单位的油，共有P单位的油，途中有N个加油站，给出每个加油站距离终点的距离和储备油量，请你求出到达目的地时，最少的加油次数。若无法到达目的地，则输出-1；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;问题分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先，这是一道贪心水题，思路主要是这样的，首先是要对题目给出的每个加油站到终点的距离进行排序，最好是根据每个加油站与起点的距离排序，然后把终点也看作是一个加油站，则最终卡车距离起点的距离应达到最大即A[N]为L，而终点是个假的加油站，所以令终点的汽油量B[N] = 0， 然后从0到N进行遍历，定义好需要的变量ans(结果)， pos(位置)，tank(油箱中汽油量)，每次遍历开始，都要重新计算到下一个站需要走的距离d，并判断用油箱中的tank能否到达下一个站，即比较二者的大小，如果走不到下一站，就要加油，但注意加油时需要借用到一个大顶堆的数据结构，即c++中的优先队列(默认是大顶堆)，将经过的油站作为备用储量存储起来，在P=0(即没油的时候)，便于取出最大储油量的油站进行加油。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这是一道很简单的贪心题，但是，我这种题目刷的不多，所以按照挑战书上面的思路就wa了很多次，当然，这个是我自己的问题，题目刷的太少了，又不细心，但是最后的话，我还是用了两种方法A掉了它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是两份AC的代码&lt;/p&gt;
&lt;p&gt;这份是参考挑战书上面的，但是挑战书上对这道题做了一点修改，即输入的距离是起点到每个加油站的距离，所以就更加的方便。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000010&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; N, L, P;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; A[maxn], B[maxn];
&lt;span style=&#34;color:#75715e&#34;&gt;//4 25 10
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//10 14 20 21
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//10 5 2 4
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Station&lt;/span&gt; {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; dis;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fuel;
};
&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cmp&lt;/span&gt;(Station a, Station b) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a.dis &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; b.dis;
}
Station sta[maxn];

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;solves&lt;/span&gt;() {
	A[N] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	B[N] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	N&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
	priority_queue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; que;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L, tank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; P;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pos &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; sta[i].dis;&lt;span style=&#34;color:#75715e&#34;&gt;//接下来要走的路程
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (tank &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//只要tank走不了d，就需要不断加油
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (que.empty()) {
				puts(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);
				&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
			}
			tank &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; que.top();
			que.pop();
			ans&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
		}
		tank &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; d; &lt;span style=&#34;color:#75715e&#34;&gt;//一共走了d这么长,花费了这么多汽油
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sta[i].dis;
		que.push(sta[i].fuel);
	}
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, ans);
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#75715e&#34;&gt;//scanf(&amp;#34;%d%d%d&amp;#34;, &amp;amp;N, &amp;amp;L, &amp;amp;P);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;N);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sta[i].dis, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sta[i].fuel);
	}
	sort(sta, sta &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; N, cmp);
	scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;L, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;P);
	priority_queue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; que;
	solves();
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这一份是参考网上的，思路较清晰&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#75715e&#34;&gt;//scanf(&amp;#34;%d%d%d&amp;#34;, &amp;amp;N, &amp;amp;L, &amp;amp;P);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;N);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
		scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sta[i].dis, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sta[i].fuel);
	}
	sort(sta, sta &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; N, cmp);
	scanf_s(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;L, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;P);
	priority_queue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; que;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (P &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (L &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
			cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
		}
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (P &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;que.empty()) {
			P &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; que.top();
			que.pop();
			ans&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
		}
		P&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (P &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
			cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
		}
		L&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (L &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; sta[i].dis) {
			que.push(sta[i].fuel);
			i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
		}
	}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以，还是要多刷题啊啊啊啊啊！多多益善！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/tieqiang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/tieqiang/</guid>
      <description>&lt;h1 id=&#34;题解&#34;&gt;题解&lt;/h1&gt;
&lt;h2 id=&#34;贴墙&#34;&gt;贴墙&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题的突破口就在于小瓷砖的面积大小，当墙的面积是2的倍数时，则无法将墙壁都贴满，反之一定能够贴满&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果先将墙的面积算出来的话就需要用到long long的数据类型来储存给的值&lt;/li&gt;
&lt;li&gt;用int应该也是可以的，就这题而言，相乘溢出是不会改变结果的奇偶性的&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; h, w;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; h &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (h &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; w &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 如果是2的倍数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {              &lt;span style=&#34;color:#75715e&#34;&gt;//如果不是2的倍数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;还有一种更好的办法，不难发现两个正整数相乘结果是奇数的充分必要条件是两个正整数都是奇数，固只需要判断两个数是否同时为奇数（即只要有一个偶数就输出Yes）便可（这是本题真正想考的思路）&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; h, w;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; h &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; w;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (h &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; w &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果其中有一个是偶数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;雕像&#34;&gt;雕像&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一道简单的模拟题，需要注意的一个坑就是如果是闰年的2月29日制作的雕像的话，纪念日就要等到闰年才能庆祝一次&lt;/li&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y1, m1, d1, x, y2, m2, d2;
    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; y1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; d1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; d2;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ans;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果是闰年的2月29号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; y2; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//从第二年开始算,算到今年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果是闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//答案加一
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年是闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//答案减一
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
            }
        }
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&lt;span style=&#34;color:#75715e&#34;&gt;//如果不是，则每年都会有一次纪念日
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; m1) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (m2 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; m1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; d2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; d1) {&lt;span style=&#34;color:#75715e&#34;&gt;//如果今年的纪念日还没到
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            ans&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
        }
    }
    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Big-Mouth.github.io/posts/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Big-Mouth.github.io/posts/update/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;cd e:\myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;hugo new posts/FileName.md
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hugo --theme=hurock --baseUrl=&amp;#34;https://Big-Mouth.github.io&amp;#34; --buildDrafts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;cd public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;git add .
git commit -m &amp;#34;yyyy/mm/dd-hh:mm&amp;#34;
git push -u origin master	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果上面的最后一步报出如下错误：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;! [rejected] master -&amp;gt; master (fetch first) error: failed to push some refs to 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;出现这个问题的原因是什么呢？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github中的README.md文件不在本地代码目录中
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因此，可以通过下面的命令进行代码合并&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pull&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rebase&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二个问题是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;! [remote rejected] master -&amp;gt; master (pre-receive hook declined)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在推送代码时报错如上，网上搜到的方法说是项目的setting中master是受保护的项目，所以开发者无法推送，解决方法是修改protected的设置，或者新建一个分支，推送到自己的分支上。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43264399/article/details/87350219&#34;&gt;其他问题看这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;em&gt;&lt;strong&gt;yyyy/mm/dd-hh:mm&lt;/strong&gt;&lt;/em&gt; 为每次提交的名称，引号内可以随意更改，yyyy/mm/dd-hh:mm 是我个人采用的格式，以时间做标记可&lt;strong&gt;保证不会重复&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;现在刷新github登陆个人博客查看即可&#34;&gt;&lt;strong&gt;现在刷新GitHub，登陆个人博客查看即可&lt;/strong&gt;&lt;/h4&gt;
</description>
    </item>
    
  </channel>
</rss>